<!--
    // (c) Copyright Microsoft Corporation.
    // This source is subject to Microsoft Public License (Ms-PL).
    // Please see http://go.microsoft.com/fwlink/?LinkID=131993 for details.
    // All other rights reserved.

    INSTUCTIONS TO ENABLE THEME IN DESIGNER :
    
    Add this block of code in the App.xaml file :
    
    <Application.Resources>
        <EW:DesignTimeResourceDictionary xmlns:EW="clr-namespace:ThemedWindows;assembly=ExpressionWindow" DesignTimeColor="Green"/>
    </Application.Resources>
    
    (Change the color to the one you want to preview)
    
    ===================================================================
    == IMPORTANT NOTE :                                              ==
    ==_______________________________________________________________==
    == This file is generated automatically at post-compilation.     ==
    == You should NOT modify it in any ways. To edit a theme color,  ==
    == edit the <Color>.xaml file in Themes/Sources/Colors.          ==
    == To edit the theme itself, edit ExpressionDarkBase.xaml in     ==
    == Themes/Source.                                                ==
    ===================================================================
-->
<ResourceDictionary xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:local="clr-namespace:ThemedWindows" xmlns:Controls="clr-namespace:ThemedWindows.Controls;assembly=ExpressionWindow" xmlns:Effects="clr-namespace:ThemedWindows.Effects;assembly=ExpressionWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
  <!-- Main Colors -->
  <Color
    x:Key="MainColor">#FFFF00BC</Color>
  <Color
    x:Key="HoverColor">#FFFF58D5</Color>
  <Color
    x:Key="BorderColor">#FFB40085</Color>
  <Color
    x:Key="DefaultColor">#FF9BB1C5</Color>
  <Color
    x:Key="LightColor">#FFFF22CE</Color>
  <Color
    x:Key="DarkColor">#FF660033</Color>
  <Color
    x:Key="ControlMouseOverColor">#33FF00BC</Color>
  <SolidColorBrush
    x:Key="MainLightBrush"
    Color="{StaticResource LightColor}" />
  <SolidColorBrush
    x:Key="MainDarkBrush"
    Color="{StaticResource DarkColor}" />
  <SolidColorBrush
    x:Key="LightBrush"
    Color="#FF333333" />
  <SolidColorBrush
    x:Key="ShadeBrush"
    Color="#FF434343" />
  <LinearGradientBrush
    x:Key="ShinyGradient"
    EndPoint="0.5,1"
    StartPoint="0.5,0">
    <GradientStop
      Color="{StaticResource LightColor}"
      Offset="0" />
    <GradientStop
      Color="{StaticResource HoverColor}"
      Offset="0.5" />
    <GradientStop
      Color="{StaticResource MainColor}"
      Offset="0.5" />
    <GradientStop
      Color="{StaticResource BorderColor}"
      Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush
    x:Key="ProgressBarIndicatorAnimatedFill"
    StartPoint="0,0"
    EndPoint="1,0"
    Opacity="0.3">
    <LinearGradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop
          Color="#00FFFFFF"
          Offset="0" />
        <GradientStop
          Color="{StaticResource LightColor}"
          Offset="0.45" />
        <GradientStop
          Color="{StaticResource LightColor}"
          Offset="0.55" />
        <GradientStop
          Color="#00FFFFFF"
          Offset="1" />
      </GradientStopCollection>
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <!-- Common Colors -->
  <Color
    x:Key="GlyphColor">#FF444444</Color>
  <Color
    x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>
  <Color
    x:Key="BlackColor">#FF000000</Color>
  <Color
    x:Key="WhiteColor">#FFFFFFFF</Color>
  <SolidColorBrush
    x:Key="TextBrush"
    Color="#FFFFFFFF" />
  <SolidColorBrush
    x:Key="BlackBrush"
    Color="{StaticResource BlackColor}" />
  <SolidColorBrush
    x:Key="NormalBrush"
    Color="{StaticResource MainColor}" />
  <SolidColorBrush
    x:Key="NormalBorderBrush"
    Color="{StaticResource BorderColor}" />
  <SolidColorBrush
    x:Key="HoverBrush"
    Color="{StaticResource HoverColor}" />
  <SolidColorBrush
    x:Key="GlyphBrush"
    Color="#FFD1D1D1" />
  <SolidColorBrush
    x:Key="WindowBorderBrush"
    Color="{StaticResource BorderColor}" />
  <LinearGradientBrush
    x:Key="PressedBrush"
    EndPoint="0.5,0.971"
    StartPoint="0.5,0.042">
    <GradientStop
      Color="#4C000000"
      Offset="0" />
    <GradientStop
      Color="#26FFFFFF"
      Offset="1" />
    <GradientStop
      Color="#4C000000"
      Offset="0.467" />
    <GradientStop
      Color="#26FFFFFF"
      Offset="0.479" />
  </LinearGradientBrush>
  <LinearGradientBrush
    x:Key="Window_Frame_Title_Brush"
    EndPoint="0.5,1"
    StartPoint="0.5,0">
    <GradientStop
      Color="#FF7C7C7C"
      Offset="0" />
    <GradientStop
      Color="#FF5F5F5F"
      Offset="0.49" />
    <GradientStop
      Color="#FF3B3B3B"
      Offset="0.51" />
    <GradientStop
      Color="#FF414141"
      Offset="1" />
  </LinearGradientBrush>
  <SolidColorBrush
    x:Key="ControlBackgroundBrush"
    Color="#FF333333" />
  <LinearGradientBrush
    x:Key="SelectedBackgroundBrush"
    EndPoint="0.5,1"
    StartPoint="0.5,0">
    <GradientStop
      Color="{StaticResource MainColor}"
      Offset="0" />
    <GradientStop
      Color="{StaticResource BorderColor}"
      Offset="1" />
  </LinearGradientBrush>
  <SolidColorBrush
    x:Key="DisabledForegroundBrush"
    Color="#888" />
  <SolidColorBrush
    x:Key="DisabledBackgroundBrush"
    Color="#FF787878" />
  <SolidColorBrush
    x:Key="DisabledBorderBrush"
    Color="#AAA" />
  <SolidColorBrush
    x:Key="WindowBackgroundBrush"
    Color="#FF595959" />
  <!-- [ENDIGNORE] -->
  <!-- STARTOUTPUT -->
  <LinearGradientBrush
    x:Key="ShineBrush"
    EndPoint="0.5,0.971"
    StartPoint="0.5,0.042">
    <GradientStop
      Color="#59FFFFFF"
      Offset="0" />
    <GradientStop
      Color="#00FFFFFF"
      Offset="1" />
    <GradientStop
      Color="#26FFFFFF"
      Offset="0.467" />
    <GradientStop
      Color="#00FFFFFF"
      Offset="0.475" />
  </LinearGradientBrush>
  <LinearGradientBrush
    x:Key="HoverShineBrush"
    EndPoint="0.5,0.971"
    StartPoint="0.5,0.042">
    <GradientStop
      Color="#3CFFFFFF"
      Offset="0" />
    <GradientStop
      Color="#26FFFFFF"
      Offset="1" />
    <GradientStop
      Color="#16FFFFFF"
      Offset="0.467" />
    <GradientStop
      Color="#52333333"
      Offset="0.475" />
    <GradientStop
      Color="#32000000"
      Offset="0.856" />
  </LinearGradientBrush>
  <LinearGradientBrush
    x:Key="PressedBorderBrush"
    EndPoint="0,1"
    StartPoint="0,0">
    <GradientStop
      Color="#444"
      Offset="0.0" />
    <GradientStop
      Color="#888"
      Offset="1.0" />
  </LinearGradientBrush>
  <SolidColorBrush
    x:Key="DefaultedBorderBrush"
    Color="{StaticResource DefaultColor}" />
  <SolidColorBrush
    x:Key="SolidBorderBrush"
    Color="#888" />
  <SolidColorBrush
    x:Key="BackgroundBrush"
    Color="#FF494949" />
  <LinearGradientBrush
    x:Key="VerticalShineBrush"
    EndPoint="0.971,0.5"
    StartPoint="0.042,0.5">
    <GradientStop
      Color="#59FFFFFF"
      Offset="0" />
    <GradientStop
      Color="#00FFFFFF"
      Offset="1" />
    <GradientStop
      Color="#26FFFFFF"
      Offset="0.467" />
    <GradientStop
      Color="#00FFFFFF"
      Offset="0.475" />
  </LinearGradientBrush>
  <LinearGradientBrush
    x:Key="VerticalHoverShineBrush"
    EndPoint="0.971,0.5"
    StartPoint="0.042,0.5">
    <GradientStop
      Color="#3CFFFFFF"
      Offset="0" />
    <GradientStop
      Color="#26FFFFFF"
      Offset="1" />
    <GradientStop
      Color="#16FFFFFF"
      Offset="0.467" />
    <GradientStop
      Color="#52333333"
      Offset="0.475" />
    <GradientStop
      Color="#32000000"
      Offset="0.856" />
  </LinearGradientBrush>
  <LinearGradientBrush
    x:Key="VerticalPressedBrush"
    EndPoint="0.971,0.5"
    StartPoint="0.042,0.5">
    <GradientStop
      Color="#1AFFFFFF"
      Offset="0" />
    <GradientStop
      Color="#13FFFFFF"
      Offset="1" />
    <GradientStop
      Color="#16FFFFFF"
      Offset="0.467" />
    <GradientStop
      Color="#52333333"
      Offset="0.475" />
    <GradientStop
      Color="#32000000"
      Offset="0.856" />
  </LinearGradientBrush>
  <LinearGradientBrush
    x:Key="VerticalPressedBorderBrush"
    EndPoint="1,0"
    StartPoint="0,0">
    <GradientStop
      Color="#444"
      Offset="0.0" />
    <GradientStop
      Color="#888"
      Offset="1.0" />
  </LinearGradientBrush>
  <Style
    TargetType="{x:Type ContextMenu}">
    <Setter
      Property="BorderBrush"
      Value="{StaticResource NormalBrush}" />
    <Setter
      Property="BorderThickness"
      Value="1" />
    <Setter
      Property="Background"
      Value="{StaticResource LightBrush}" />
    <Setter
      Property="HasDropShadow"
      Value="True" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="ContextMenu">
          <Border
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="{TemplateBinding Background}">
            <StackPanel
              IsItemsHost="True"
              KeyboardNavigation.DirectionalNavigation="Cycle" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!--==============================
    ===                            ===
    ===    CUSTOM CONTROLS HERE    ===
    ===____________________________-->
  <Style
    x:Key="RepeatButtonUp"
    TargetType="{x:Type RepeatButton}">
    <Setter
      Property="Background"
      Value="{StaticResource NormalBrush}" />
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Setter
      Property="BorderBrush"
      Value="{StaticResource NormalBorderBrush}" />
    <Setter
      Property="Focusable"
      Value="False" />
    <Setter
      Property="BorderThickness"
      Value="1" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type RepeatButton}">
          <ControlTemplate.Resources>
            <Storyboard
              x:Key="HoverOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverShineBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="HoverOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverShineBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="PressedOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="PressedBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="PressedOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="PressedBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="FocusedOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="FocusVisualElement"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="FocussedOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="FocusVisualElement"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid
            x:Name="Grid">
            <Border
              x:Name="Background"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="0,3,0,0" />
            <Border
              x:Name="HoverBorder"
              Opacity="0"
              Background="{StaticResource HoverBrush}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="0,3,0,0" />
            <Border
              x:Name="HoverShineBorder"
              Opacity="0"
              Background="{StaticResource HoverShineBrush}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="0,3,0,0" />
            <Border
              x:Name="PressedBorder"
              Opacity="0"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              Background="{StaticResource PressedBrush}"
              CornerRadius="0,3,0,0" />
            <Border
              x:Name="ShineBorder"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              Background="{StaticResource ShineBrush}"
              Opacity="1"
              CornerRadius="0,3,0,0" />
            <Polygon
              HorizontalAlignment="Center"
              Points="0,7 5,0 10,7"
              Stretch="Uniform"
              Fill="White"
              VerticalAlignment="Center"
              Margin="5,2"
              MaxHeight="8" />
            <Border
              x:Name="FocusVisualElement"
              IsHitTestVisible="false"
              BorderBrush="{StaticResource HoverShineBrush}"
              BorderThickness="1"
              Margin="1,1,1,1"
              Opacity="0"
              CornerRadius="0,3,0,0" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsKeyboardFocused"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource FocussedOff}"
                  x:Name="FocussedOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource FocusedOn}"
                  x:Name="FocusedOn_BeginStoryboard" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger
              Property="IsMouseOver"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOff}"
                  x:Name="HoverOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger
              Property="IsPressed"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource PressedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource PressedOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger
              Property="IsEnabled"
              Value="true" />
            <Trigger
              Property="IsEnabled"
              Value="false">
              <Setter
                Property="Background"
                Value="{StaticResource DisabledBackgroundBrush}"
                TargetName="Background" />
              <Setter
                Property="BorderBrush"
                Value="{StaticResource DisabledBorderBrush}"
                TargetName="ShineBorder" />
              <Setter
                Property="Opacity"
                TargetName="Grid"
                Value="0.5" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style
    x:Key="RepeatButtonDown"
    TargetType="{x:Type RepeatButton}"
    BasedOn="{x:Null}">
    <Setter
      Property="Background"
      Value="{StaticResource NormalBrush}" />
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Setter
      Property="BorderBrush"
      Value="{StaticResource NormalBorderBrush}" />
    <Setter
      Property="Focusable"
      Value="False" />
    <Setter
      Property="BorderThickness"
      Value="1" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type RepeatButton}">
          <ControlTemplate.Resources>
            <Storyboard
              x:Key="HoverOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverShineBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="HoverOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverShineBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="PressedOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="PressedBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="PressedOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="PressedBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="FocusedOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="FocusVisualElement"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="FocussedOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="FocusVisualElement"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid
            x:Name="Grid">
            <Border
              x:Name="Background"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="0,0,3,0" />
            <Border
              x:Name="HoverBorder"
              Opacity="0"
              Background="{StaticResource HoverBrush}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="0,0,3,0" />
            <Border
              x:Name="HoverShineBorder"
              Opacity="0"
              Background="{StaticResource HoverShineBrush}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="0,0,3,0" />
            <Border
              x:Name="PressedBorder"
              Opacity="0"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              Background="{StaticResource PressedBrush}"
              CornerRadius="0,0,3,0" />
            <Border
              x:Name="ShineBorder"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              Background="{StaticResource ShineBrush}"
              Opacity="1"
              CornerRadius="0,0,3,0" />
            <Polygon
              HorizontalAlignment="Center"
              Points="0,0 5,7 10,0"
              Stretch="Uniform"
              Fill="White"
              VerticalAlignment="Center"
              Margin="5,2"
              MaxHeight="8" />
            <Border
              x:Name="FocusVisualElement"
              IsHitTestVisible="false"
              BorderBrush="{StaticResource HoverShineBrush}"
              BorderThickness="1"
              Margin="1,1,1,1"
              Opacity="0"
              CornerRadius="0,0,3,0" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsKeyboardFocused"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource FocussedOff}"
                  x:Name="FocussedOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource FocusedOn}"
                  x:Name="FocusedOn_BeginStoryboard" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger
              Property="IsMouseOver"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOff}"
                  x:Name="HoverOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger
              Property="IsPressed"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource PressedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource PressedOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger
              Property="IsEnabled"
              Value="true" />
            <Trigger
              Property="IsEnabled"
              Value="false">
              <Setter
                Property="Background"
                Value="{StaticResource DisabledBackgroundBrush}"
                TargetName="Background" />
              <Setter
                Property="BorderBrush"
                Value="{StaticResource DisabledBorderBrush}"
                TargetName="ShineBorder" />
              <Setter
                Property="Opacity"
                TargetName="Grid"
                Value="0.5" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style
    TargetType="{x:Type Controls:NumericUpDown}">
    <Setter
      Property="BorderBrush"
      Value="{StaticResource NormalBorderBrush}" />
    <Setter
      Property="Background"
      Value="{StaticResource BackgroundBrush}" />
    <Setter
      Property="BorderThickness"
      Value="1" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type Controls:NumericUpDown}">
          <Border
            x:Name="NUD_Border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="3"
            Margin="0"
            Padding="0">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition
                  Height="1*" />
                <RowDefinition
                  Height="1*" />
              </Grid.RowDefinitions>
              <TextBox
                x:Name="NUD_TextBox"
                Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DisplayValue, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
                Grid.RowSpan="2"
                Padding="0,0,20,0"
                BorderBrush="Transparent"
                BorderThickness="0"
                Margin="0"
                HorizontalContentAlignment="Right"
                VerticalContentAlignment="Center" />
              <RepeatButton
                x:Name="NUD_Up"
                Interval="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ChangeInterval}"
                Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Increase}"
                Grid.Row="0"
                HorizontalAlignment="Right"
                VerticalAlignment="Stretch"
                Width="18"
                Margin="0,-1,-1,0"
                Focusable="False"
                Style="{StaticResource RepeatButtonUp}" />
              <RepeatButton
                x:Name="NUD_Down"
                Interval="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ChangeInterval}"
                Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Decrease}"
                Grid.Row="1"
                HorizontalAlignment="Right"
                VerticalAlignment="Stretch"
                Width="18"
                Margin="0,0,-1,-1"
                Focusable="False"
                Style="{StaticResource RepeatButtonDown}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style
    TargetType="{x:Type Controls:MonoPictureButton}"
    BasedOn="{x:Null}">
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type Controls:MonoPictureButton}">
          <ControlTemplate.Resources>
            <Storyboard
              x:Key="HoverOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="0:0:0"
                Storyboard.TargetName="Hover"
                Storyboard.TargetProperty="Opacity">
                <SplineDoubleKeyFrame
                  KeyTime="0:0:0.2"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="0:0:0"
                Storyboard.TargetName="Normal"
                Storyboard.TargetProperty="Opacity">
                <SplineDoubleKeyFrame
                  KeyTime="0:0:0.2"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="HoverOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="0:0:0"
                Storyboard.TargetName="Hover"
                Storyboard.TargetProperty="Opacity">
                <SplineDoubleKeyFrame
                  KeyTime="0:0:0.2"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="0:0:0"
                Storyboard.TargetName="Normal"
                Storyboard.TargetProperty="Opacity">
                <SplineDoubleKeyFrame
                  KeyTime="0:0:0.2"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="PressedOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="0:0:0"
                Storyboard.TargetName="Pressed"
                Storyboard.TargetProperty="Opacity">
                <SplineDoubleKeyFrame
                  KeyTime="0:0:0.2"
                  Value="0.5" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="PressedOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="0:0:0"
                Storyboard.TargetName="Pressed"
                Storyboard.TargetProperty="Opacity">
                <SplineDoubleKeyFrame
                  KeyTime="0:0:0.2"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="Disabled">
              <DoubleAnimationUsingKeyFrames
                BeginTime="0:0:0"
                Storyboard.TargetName="MonoPictureButton_BCS"
                Storyboard.TargetProperty="Saturation">
                <SplineDoubleKeyFrame
                  KeyTime="0:0:0.0"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid>
            <Image
              Source="{TemplateBinding Image}"
              x:Name="Normal">
              <Image.Effect>
                <Effects:ColorizeBCSEffect
                  x:Name="MonoPictureButton_BCS"
                  Color="White" />
              </Image.Effect>
            </Image>
            <Image
              Source="{TemplateBinding Image}"
              x:Name="Hover"
              Opacity="0">
              <Image.Effect>
                <Effects:ColorizeBCSEffect
                  Brightness="0.15"
                  Contrast="1.6"
                  Color="{StaticResource MainColor}" />
              </Image.Effect>
            </Image>
            <Image
              Source="{TemplateBinding Image}"
              x:Name="Pressed"
              Opacity="0">
              <Image.Effect>
                <Effects:ColorizeEffect
                  Color="Black" />
              </Image.Effect>
            </Image>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsMouseOver"
              Value="true">
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOn}"
                  x:Name="HoverStoryBoard" />
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOff}" />
              </Trigger.ExitActions>
            </Trigger>
            <Trigger
              Property="IsPressed"
              Value="true">
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource PressedOn}"
                  x:Name="PressedStoryBoard" />
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource PressedOff}" />
              </Trigger.ExitActions>
            </Trigger>
            <Trigger
              Property="IsEnabled"
              Value="false">
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource Disabled}"
                  x:Name="DisabledStoryBoard" />
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <RemoveStoryboard
                  BeginStoryboardName="DisabledStoryBoard" />
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style
    TargetType="{x:Type Controls:ColorButton}"
    BasedOn="{x:Null}">
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Setter
      Property="Padding"
      Value="10,2" />
    <Setter
      Property="Focusable"
      Value="False" />
    <Setter
      Property="BorderThickness"
      Value="1" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type Controls:ColorButton}">
          <ControlTemplate.Resources>
            <Storyboard
              x:Key="HoverOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverShineBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="HoverOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverShineBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="PressedOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="PressedBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="PressedOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="PressedBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="FocusedOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="FocusVisualElement"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="FocussedOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="FocusVisualElement"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid
            x:Name="Grid">
            <Border
              x:Name="Background"
              Background="{TemplateBinding BackgroundColor}"
              BorderBrush="{TemplateBinding BorderColor}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="3" />
            <Border
              x:Name="HoverBorder"
              Opacity="0"
              Background="{TemplateBinding HoverBorderColor}"
              BorderBrush="{TemplateBinding HoverBorderColor}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="3" />
            <Border
              x:Name="HoverShineBorder"
              Opacity="0"
              Background="{StaticResource HoverShineBrush}"
              BorderBrush="{TemplateBinding HoverBorderColor}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="3" />
            <Border
              x:Name="PressedBorder"
              Opacity="0"
              BorderBrush="{TemplateBinding HoverBorderColor}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="3"
              Background="{StaticResource PressedBrush}" />
            <Border
              x:Name="ShineBorder"
              BorderBrush="Transparent"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="3"
              Background="{StaticResource ShineBrush}"
              Opacity="1" />
            <ContentPresenter
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              Margin="{TemplateBinding Padding}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              RecognizesAccessKey="True" />
            <Border
              x:Name="FocusVisualElement"
              IsHitTestVisible="false"
              BorderBrush="{TemplateBinding HoverBorderColor}"
              BorderThickness="1"
              CornerRadius="3,3,3,3"
              Margin="1,1,1,1"
              Opacity="0" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsDefault"
              Value="True">
              <Setter
                Property="BorderBrush"
                TargetName="ShineBorder"
                Value="{StaticResource DefaultedBorderBrush}" />
            </Trigger>
            <Trigger
              Property="IsKeyboardFocused"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource FocussedOff}"
                  x:Name="FocussedOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource FocusedOn}"
                  x:Name="FocusedOn_BeginStoryboard" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger
              Property="IsMouseOver"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOff}"
                  x:Name="HoverOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger
              Property="IsPressed"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource PressedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource PressedOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger
              Property="IsEnabled"
              Value="true" />
            <Trigger
              Property="IsEnabled"
              Value="false">
              <Setter
                Property="Background"
                Value="{StaticResource DisabledBackgroundBrush}"
                TargetName="Background" />
              <Setter
                Property="BorderBrush"
                Value="{StaticResource DisabledBorderBrush}"
                TargetName="ShineBorder" />
              <Setter
                Property="Opacity"
                TargetName="Grid"
                Value="0.5" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!-- CUSTOM WINDOW FRAME STUFF -->
  <!-- CLOSE -->
  <Style
    x:Key="Window_Button_Close"
    TargetType="{x:Type Button}"
    BasedOn="{x:Null}">
    <Setter
      Property="Background"
      Value="{StaticResource NormalBrush}" />
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Setter
      Property="BorderBrush"
      Value="{StaticResource WindowBorderBrush}" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type Button}">
          <ControlTemplate.Resources>
            <Storyboard
              x:Key="HoverOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverShineBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="HoverOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverShineBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="PressedOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="PressedBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="PressedOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="PressedBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid
            x:Name="Grid">
            <Border
              x:Name="Background"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="0,0,3,0" />
            <Border
              x:Name="HoverBorder"
              Opacity="0"
              Background="{StaticResource HoverBrush}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="0,0,3,0" />
            <Border
              x:Name="HoverShineBorder"
              Opacity="0"
              Background="{StaticResource HoverShineBrush}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="0,0,3,0" />
            <Border
              x:Name="PressedBorder"
              Opacity="0"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              Background="{StaticResource PressedBrush}"
              CornerRadius="0,0,3,0" />
            <Border
              x:Name="ShineBorder"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              Background="{StaticResource ShineBrush}"
              Opacity="1"
              CornerRadius="0,0,3,0" />
            <ContentPresenter
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              Margin="{TemplateBinding Padding}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              RecognizesAccessKey="True" />
            <Border
              x:Name="FocusVisualElement"
              IsHitTestVisible="false"
              BorderBrush="{StaticResource HoverShineBrush}"
              BorderThickness="1"
              Margin="1,1,1,1"
              Opacity="0"
              CornerRadius="0,0,3,0" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsDefault"
              Value="True">
              <Setter
                Property="BorderBrush"
                TargetName="ShineBorder"
                Value="{StaticResource DefaultedBorderBrush}" />
            </Trigger>
            <Trigger
              Property="IsMouseOver"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOff}"
                  x:Name="HoverOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger
              Property="IsPressed"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource PressedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource PressedOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger
              Property="Tag"
              Value="" />
            <Trigger
              Property="Tag"
              Value="Shaded">
              <Setter
                Property="Background"
                Value="Transparent" />
              <Setter
                Property="Foreground"
                Value="{StaticResource TextBrush}" />
              <Setter
                Property="BorderBrush"
                Value="{StaticResource WindowBorderBrush}" />
              <Setter
                Property="Background"
                TargetName="ShineBorder"
                Value="Transparent" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!-- MAXIMIZE -->
  <Style
    x:Key="Window_Button_Maximize"
    TargetType="{x:Type Button}"
    BasedOn="{x:Null}">
    <Setter
      Property="Background"
      Value="{StaticResource NormalBrush}" />
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Setter
      Property="BorderBrush"
      Value="{StaticResource WindowBorderBrush}" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type Button}">
          <ControlTemplate.Resources>
            <Storyboard
              x:Key="HoverOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverShineBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="HoverOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverShineBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="PressedOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="PressedBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="PressedOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="PressedBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="FocusedOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="FocusVisualElement"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="FocussedOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="FocusVisualElement"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid
            x:Name="Grid">
            <Border
              x:Name="Background"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="0,0,0,0" />
            <Border
              x:Name="HoverBorder"
              Opacity="0"
              Background="{StaticResource HoverBrush}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="0,0,0,0" />
            <Border
              x:Name="HoverShineBorder"
              Opacity="0"
              Background="{StaticResource HoverShineBrush}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="0,0,0,0" />
            <Border
              x:Name="PressedBorder"
              Opacity="0"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              Background="{StaticResource PressedBrush}"
              CornerRadius="0,0,0,0" />
            <Border
              x:Name="ShineBorder"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              Background="{StaticResource ShineBrush}"
              Opacity="1"
              CornerRadius="0,0,0,0" />
            <ContentPresenter
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              Margin="{TemplateBinding Padding}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              RecognizesAccessKey="True" />
            <Border
              x:Name="FocusVisualElement"
              IsHitTestVisible="false"
              BorderBrush="{StaticResource HoverShineBrush}"
              BorderThickness="1"
              Margin="1,1,1,1"
              Opacity="0"
              CornerRadius="0,0,0,0" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsDefault"
              Value="True">
              <Setter
                Property="BorderBrush"
                TargetName="ShineBorder"
                Value="{StaticResource DefaultedBorderBrush}" />
            </Trigger>
            <Trigger
              Property="IsKeyboardFocused"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource FocussedOff}"
                  x:Name="FocussedOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource FocusedOn}"
                  x:Name="FocusedOn_BeginStoryboard" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger
              Property="IsMouseOver"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOff}"
                  x:Name="HoverOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger
              Property="IsPressed"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource PressedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource PressedOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger
              Property="Tag"
              Value="" />
            <Trigger
              Property="Tag"
              Value="Shaded">
              <Setter
                Property="Background"
                Value="Transparent" />
              <Setter
                Property="Foreground"
                Value="{StaticResource TextBrush}" />
              <Setter
                Property="BorderBrush"
                Value="{StaticResource WindowBorderBrush}" />
              <Setter
                Property="Background"
                TargetName="ShineBorder"
                Value="Transparent" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!-- MINIMIZE -->
  <Style
    x:Key="Window_Button_Minimize"
    TargetType="{x:Type Button}"
    BasedOn="{x:Null}">
    <Setter
      Property="Background"
      Value="{StaticResource NormalBrush}" />
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Setter
      Property="BorderBrush"
      Value="{StaticResource WindowBorderBrush}" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type Button}">
          <ControlTemplate.Resources>
            <Storyboard
              x:Key="HoverOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverShineBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="HoverOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverShineBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="PressedOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="PressedBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="PressedOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="PressedBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="FocusedOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="FocusVisualElement"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="FocussedOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="FocusVisualElement"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid
            x:Name="Grid">
            <Border
              x:Name="Background"
              Opacity="1"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="0,0,0,3" />
            <Border
              x:Name="HoverBorder"
              Opacity="0"
              Background="{StaticResource HoverBrush}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="0,0,0,3" />
            <Border
              x:Name="HoverShineBorder"
              Opacity="0"
              Background="{StaticResource HoverShineBrush}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="0,0,0,3" />
            <Border
              x:Name="PressedBorder"
              Opacity="0"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              Background="{StaticResource PressedBrush}"
              CornerRadius="0,0,0,3" />
            <Border
              x:Name="ShineBorder"
              Opacity="1"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              Background="{StaticResource ShineBrush}"
              CornerRadius="0,0,0,3" />
            <ContentPresenter
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              Margin="{TemplateBinding Padding}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              RecognizesAccessKey="True" />
            <Border
              x:Name="FocusVisualElement"
              IsHitTestVisible="false"
              BorderBrush="{StaticResource HoverShineBrush}"
              BorderThickness="1"
              Margin="1,1,1,1"
              Opacity="0"
              CornerRadius="0,0,0,3" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsDefault"
              Value="True">
              <Setter
                Property="BorderBrush"
                TargetName="ShineBorder"
                Value="{StaticResource DefaultedBorderBrush}" />
            </Trigger>
            <Trigger
              Property="IsKeyboardFocused"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource FocussedOff}"
                  x:Name="FocussedOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource FocusedOn}"
                  x:Name="FocusedOn_BeginStoryboard" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger
              Property="IsMouseOver"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOff}"
                  x:Name="HoverOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger
              Property="IsPressed"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource PressedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource PressedOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger
              Property="Tag"
              Value="" />
            <Trigger
              Property="Tag"
              Value="Shaded">
              <Setter
                Property="Background"
                Value="Transparent" />
              <Setter
                Property="Foreground"
                Value="{StaticResource TextBrush}" />
              <Setter
                Property="BorderBrush"
                Value="{StaticResource WindowBorderBrush}" />
              <Setter
                Property="Background"
                TargetName="ShineBorder"
                Value="Transparent" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style
    x:Key="Window_Frame_Border"
    TargetType="{x:Type Border}"
    BasedOn="{x:Null}">
    <Setter
      Property="BorderBrush"
      Value="{StaticResource NormalBrush}" />
    <Setter
      Property="BorderThickness"
      Value="1" />
  </Style>
  <Style
    x:Key="Window_Frame_Title_Bar"
    TargetType="{x:Type Grid}"
    BasedOn="{x:Null}">
    <Setter
      Property="Background"
      Value="{StaticResource Window_Frame_Title_Brush}" />
  </Style>
  <!-- END CUSTOM WINDOW FRAME STUFF -->
  <Style
    x:Key="ThemedBorder"
    TargetType="{x:Type Border}"
    BasedOn="{x:Null}">
    <Setter
      Property="BorderBrush"
      Value="{StaticResource NormalBrush}" />
    <Setter
      Property="Background"
      Value="{StaticResource BackgroundBrush}" />
    <Setter
      Property="BorderThickness"
      Value="1" />
  </Style>
  <Style
    x:Key="{x:Type ProgressBar}"
    TargetType="{x:Type ProgressBar}">
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type ProgressBar}">
          <Grid
            Background="Transparent">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup
                x:Name="CommonStates">
                <VisualState
                  x:Name="Determinate" />
                <VisualState
                  x:Name="Indeterminate">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames
                      Duration="00:00:00"
                      Storyboard.TargetName="PART_Indicator"
                      Storyboard.TargetProperty="Background">
                      <DiscreteObjectKeyFrame
                        KeyTime="00:00:00">
                        <DiscreteObjectKeyFrame.Value>
                          <SolidColorBrush>Transparent</SolidColorBrush>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border
              x:Name="PART_Track"
              CornerRadius="1"
              BorderThickness="1"
              Padding="1"
              BorderBrush="{StaticResource NormalBorderBrush}"
              Background="{StaticResource MainDarkBrush}" />
            <Border
              x:Name="PART_Indicator"
              BorderBrush="{StaticResource NormalBorderBrush}"
              CornerRadius="1"
              BorderThickness="0,0,1,0"
              HorizontalAlignment="Left"
              Background="{TemplateBinding Foreground}"
              Margin="1">
              <Grid
                ClipToBounds="True"
                x:Name="Animation">
                <Rectangle
                  x:Name="PART_GlowRect"
                  Width="100"
                  HorizontalAlignment="Left"
                  Margin="-100,0,0,0"
                  Fill="{StaticResource ProgressBarIndicatorAnimatedFill}" />
              </Grid>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter
      Property="Background">
      <Setter.Value>
        <LinearGradientBrush
          StartPoint="0,0"
          EndPoint="0,1">
          <GradientStop
            Color="{StaticResource MainColor}"
            Offset="0" />
          <GradientStop
            Color="{StaticResource BorderColor}"
            Offset="1" />
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter
      Property="Foreground"
      Value="{StaticResource ShinyGradient}" />
  </Style>
  <!--Style for the days of a month.-->
  <Style
    TargetType="CalendarDayButton"
    x:Key="CalendarDayButtonStyle">
    <Setter
      Property="MinWidth"
      Value="5" />
    <Setter
      Property="MinHeight"
      Value="5" />
    <Setter
      Property="FontSize"
      Value="10" />
    <Setter
      Property="HorizontalContentAlignment"
      Value="Center" />
    <Setter
      Property="VerticalContentAlignment"
      Value="Center" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="CalendarDayButton">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup
                Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition
                    GeneratedDuration="0:0:0.1" />
                </VisualStateGroup.Transitions>
                <VisualState
                  Name="Normal" />
                <VisualState
                  Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation
                      Storyboard.TargetName="HighlightBackground"
                      Storyboard.TargetProperty="Opacity"
                      To="1"
                      Duration="0" />
                  </Storyboard>
                </VisualState>
                <VisualState
                  Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation
                      Storyboard.TargetName="HighlightBackground"
                      Storyboard.TargetProperty="Opacity"
                      To="0.5"
                      Duration="0" />
                  </Storyboard>
                </VisualState>
                <VisualState
                  Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation
                      Storyboard.TargetName="HighlightBackground"
                      Storyboard.TargetProperty="Opacity"
                      To="0"
                      Duration="0" />
                    <DoubleAnimation
                      Storyboard.TargetName="NormalText"
                      Storyboard.TargetProperty="Opacity"
                      To=".35"
                      Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup
                Name="SelectionStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition
                    GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState
                  Name="Unselected" />
                <VisualState
                  Name="Selected">
                  <Storyboard>
                    <DoubleAnimation
                      Storyboard.TargetName="SelectedBackground"
                      Storyboard.TargetProperty="Opacity"
                      To=".75"
                      Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup
                Name="CalendarButtonFocusStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition
                    GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState
                  Name="CalendarButtonFocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames
                      Storyboard.TargetName="DayButtonFocusVisual"
                      Storyboard.TargetProperty="Visibility"
                      Duration="0">
                      <DiscreteObjectKeyFrame
                        KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState
                  Name="CalendarButtonUnfocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames
                      Storyboard.TargetName="DayButtonFocusVisual"
                      Storyboard.TargetProperty="Visibility"
                      Duration="0">
                      <DiscreteObjectKeyFrame
                        KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Collapsed</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup
                Name="ActiveStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition
                    GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState
                  Name="Active" />
                <VisualState
                  Name="Inactive">
                  <Storyboard>
                    <ColorAnimation
                      Duration="0"
                      Storyboard.TargetName="NormalText"
                      Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                      To="#FF777777" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup
                Name="DayStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition
                    GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState
                  Name="RegularDay" />
                <VisualState
                  Name="Today">
                  <Storyboard>
                    <DoubleAnimation
                      Storyboard.TargetName="TodayBackground"
                      Storyboard.TargetProperty="Opacity"
                      To="0.4"
                      Duration="0" />
                    <ColorAnimation
                      Duration="0"
                      Storyboard.TargetName="NormalText"
                      Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                      To="#FFFFFFFF" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup
                Name="BlackoutDayStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition
                    GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState
                  Name="NormalDay" />
                <VisualState
                  Name="BlackoutDay">
                  <Storyboard>
                    <DoubleAnimation
                      Duration="0"
                      Storyboard.TargetName="Blackout"
                      Storyboard.TargetProperty="Opacity"
                      To=".2" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle
              x:Name="TodayBackground"
              RadiusX="1"
              RadiusY="1"
              Opacity="0">
              <Rectangle.Fill>
                <SolidColorBrush
                  Color="{StaticResource HoverColor}" />
              </Rectangle.Fill>
            </Rectangle>
            <Rectangle
              x:Name="SelectedBackground"
              RadiusX="1"
              RadiusY="1"
              Opacity="0">
              <Rectangle.Fill>
                <SolidColorBrush
                  Color="{StaticResource HoverColor}" />
              </Rectangle.Fill>
            </Rectangle>
            <Border
              Background="{TemplateBinding Background}"
              BorderThickness="{TemplateBinding BorderThickness}"
              BorderBrush="{TemplateBinding BorderBrush}" />
            <Rectangle
              x:Name="HighlightBackground"
              RadiusX="1"
              RadiusY="1"
              Opacity="0">
              <Rectangle.Fill>
                <SolidColorBrush
                  Color="{StaticResource ControlMouseOverColor}" />
              </Rectangle.Fill>
            </Rectangle>
            <ContentPresenter
              x:Name="NormalText"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              Margin="5,1,5,1">
              <TextElement.Foreground>
                <SolidColorBrush
                  Color="#FF333333" />
              </TextElement.Foreground>
            </ContentPresenter>
            <Path
              x:Name="Blackout"
              Opacity="0"
              Margin="3"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              RenderTransformOrigin="0.5,0.5"
              Fill="#FF000000"
              Stretch="Fill"
              Data="M8.1772461,11.029181 L10.433105,&#xD;&#xA;                                  11.029181 L11.700684,12.801641 L12.973633,&#xD;&#xA;                                  11.029181 L15.191895,11.029181 L12.844727,&#xD;&#xA;                                  13.999395 L15.21875,17.060919 L12.962891,&#xD;&#xA;                                  17.060919 L11.673828,15.256231 L10.352539,&#xD;&#xA;                                  17.060919 L8.1396484,17.060919 L10.519043,&#xD;&#xA;                                  14.042364 z" />
            <Rectangle
              x:Name="DayButtonFocusVisual"
              Visibility="Collapsed"
              IsHitTestVisible="false"
              RadiusX="1"
              RadiusY="1">
              <Rectangle.Stroke>
                <SolidColorBrush
                  Color="{StaticResource HoverColor}" />
              </Rectangle.Stroke>
            </Rectangle>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!--Style for the months of a year and years of a decade.-->
  <Style
    TargetType="CalendarButton"
    x:Key="CalendarButtonStyle">
    <Setter
      Property="MinWidth"
      Value="40" />
    <Setter
      Property="MinHeight"
      Value="42" />
    <Setter
      Property="FontSize"
      Value="10" />
    <Setter
      Property="HorizontalContentAlignment"
      Value="Center" />
    <Setter
      Property="VerticalContentAlignment"
      Value="Center" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="CalendarButton">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup
                Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition
                    GeneratedDuration="0:0:0.1" />
                </VisualStateGroup.Transitions>
                <VisualState
                  Name="Normal" />
                <VisualState
                  Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation
                      Storyboard.TargetName="Background"
                      Storyboard.TargetProperty="Opacity"
                      To=".5"
                      Duration="0" />
                  </Storyboard>
                </VisualState>
                <VisualState
                  Name="Pressed">
                  <Storyboard>
                    <DoubleAnimation
                      Storyboard.TargetName="Background"
                      Storyboard.TargetProperty="Opacity"
                      To=".5"
                      Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup
                Name="SelectionStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition
                    GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState
                  Name="Unselected" />
                <VisualState
                  Name="Selected">
                  <Storyboard>
                    <DoubleAnimation
                      Storyboard.TargetName="SelectedBackground"
                      Storyboard.TargetProperty="Opacity"
                      To=".75"
                      Duration="0" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup
                Name="ActiveStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition
                    GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState
                  Name="Active" />
                <VisualState
                  Name="Inactive">
                  <Storyboard>
                    <ColorAnimation
                      Duration="0"
                      Storyboard.TargetName="NormalText"
                      Storyboard.TargetProperty="(TextElement.Foreground).&#xD;&#xA;                  (SolidColorBrush.Color)"
                      To="#FF777777" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup
                Name="CalendarButtonFocusStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition
                    GeneratedDuration="0" />
                </VisualStateGroup.Transitions>
                <VisualState
                  Name="CalendarButtonFocused">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames
                      Duration="0"
                      Storyboard.TargetName="CalendarButtonFocusVisual"
                      Storyboard.TargetProperty="Visibility">
                      <DiscreteObjectKeyFrame
                        KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState
                  Name="CalendarButtonUnfocused" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle
              x:Name="SelectedBackground"
              RadiusX="1"
              RadiusY="1"
              Opacity="0">
              <Rectangle.Fill>
                <SolidColorBrush
                  Color="{StaticResource HoverColor}" />
              </Rectangle.Fill>
            </Rectangle>
            <Rectangle
              x:Name="Background"
              RadiusX="1"
              RadiusY="1"
              Opacity="0">
              <Rectangle.Fill>
                <SolidColorBrush
                  Color="{StaticResource HoverColor}" />
              </Rectangle.Fill>
            </Rectangle>
            <ContentPresenter
              x:Name="NormalText"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              Margin="1,0,1,1">
              <TextElement.Foreground>
                <SolidColorBrush
                  Color="#FF333333" />
              </TextElement.Foreground>
            </ContentPresenter>
            <Rectangle
              x:Name="CalendarButtonFocusVisual"
              Visibility="Collapsed"
              IsHitTestVisible="false"
              RadiusX="1"
              RadiusY="1">
              <Rectangle.Stroke>
                <SolidColorBrush
                  Color="{StaticResource HoverColor}" />
              </Rectangle.Stroke>
            </Rectangle>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter
      Property="Background">
      <Setter.Value>
        <SolidColorBrush
          Color="{StaticResource MainColor}" />
      </Setter.Value>
    </Setter>
  </Style>
  <!--Button to go to the previous month or year.-->
  <ControlTemplate
    x:Key="PreviousButtonTemplate"
    TargetType="{x:Type Button}">
    <Grid
      Cursor="Hand">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup
          x:Name="CommonStates">
          <VisualState
            x:Name="Normal" />
          <VisualState
            x:Name="MouseOver">
            <Storyboard>
              <ColorAnimation
                Duration="0"
                Storyboard.TargetName="path"
                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                To="{StaticResource GlyphMouseOver}" />
            </Storyboard>
          </VisualState>
          <VisualState
            x:Name="Disabled">
            <Storyboard>
              <DoubleAnimation
                Duration="0"
                To=".5"
                Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)"
                Storyboard.TargetName="path" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <!--<Rectangle Fill="Transparent" Opacity="1" Stretch="Fill"/>-->
      <Grid
        Background="Transparent">
        <Path
          x:Name="path"
          Margin="14,-6,0,0"
          Stretch="Fill"
          HorizontalAlignment="Left"
          Height="10"
          VerticalAlignment="Center"
          Width="6"
          Data="M288.75,232.25 L288.75,240.625 L283,236.625 z">
          <Path.Fill>
            <SolidColorBrush
              Color="{StaticResource GlyphColor}" />
          </Path.Fill>
        </Path>
      </Grid>
    </Grid>
  </ControlTemplate>
  <!--Button to go to the next month or year.-->
  <ControlTemplate
    x:Key="NextButtonTemplate"
    TargetType="{x:Type Button}">
    <Grid
      Cursor="Hand">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup
          x:Name="CommonStates">
          <VisualState
            x:Name="Normal" />
          <VisualState
            x:Name="MouseOver">
            <Storyboard>
              <ColorAnimation
                Duration="0"
                To="{StaticResource GlyphMouseOver}"
                Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                Storyboard.TargetName="path" />
            </Storyboard>
          </VisualState>
          <VisualState
            x:Name="Disabled">
            <Storyboard>
              <DoubleAnimation
                Duration="0"
                To=".5"
                Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)"
                Storyboard.TargetName="path" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <!--<Rectangle Fill="#11E5EBF1" Opacity="1" Stretch="Fill"/>-->
      <Grid
        Background="Transparent">
        <Path
          x:Name="path"
          Data="M282.875,231.875 L282.875,240.375 L288.625,236 z"
          HorizontalAlignment="Right"
          Height="10"
          Margin="0,-6,14,0"
          Stretch="Fill"
          VerticalAlignment="Center"
          Width="6">
          <Path.Fill>
            <SolidColorBrush
              Color="{StaticResource GlyphColor}" />
          </Path.Fill>
        </Path>
      </Grid>
    </Grid>
  </ControlTemplate>
  <!--Button to go up a level to the year or decade.-->
  <ControlTemplate
    x:Key="HeaderButtonTemplate"
    TargetType="{x:Type Button}">
    <Grid
      Cursor="Hand">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup
          x:Name="CommonStates">
          <VisualState
            x:Name="Normal" />
          <VisualState
            x:Name="MouseOver">
            <Storyboard>
              <ColorAnimation
                Duration="0"
                To="{StaticResource GlyphMouseOver}"
                Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                Storyboard.TargetName="buttonContent" />
            </Storyboard>
          </VisualState>
          <VisualState
            x:Name="Disabled">
            <Storyboard>
              <DoubleAnimation
                Duration="0"
                To=".5"
                Storyboard.TargetProperty="Opacity"
                Storyboard.TargetName="buttonContent" />
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <ContentPresenter
        x:Name="buttonContent"
        Margin="1,4,1,9"
        ContentTemplate="{TemplateBinding ContentTemplate}"
        Content="{TemplateBinding Content}"
        TextElement.Foreground="{TemplateBinding Foreground}"
        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
    </Grid>
  </ControlTemplate>
  <Style
    x:Key="CalendarItemStyle"
    TargetType="{x:Type CalendarItem}">
    <Setter
      Property="Margin"
      Value="0,3,0,3" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type CalendarItem}">
          <ControlTemplate.Resources>
            <DataTemplate
              x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
              <TextBlock
                Foreground="{StaticResource MainLightBrush}"
                FontWeight="Bold"
                FontSize="9.5"
                FontFamily="Verdana"
                Margin="0,6,0,6"
                Text="{Binding}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center" />
            </DataTemplate>
          </ControlTemplate.Resources>
          <Grid
            x:Name="PART_Root">
            <Grid.Resources>
              <SolidColorBrush
                x:Key="DisabledColor"
                Color="#A5FFFFFF" />
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup
                x:Name="CommonStates">
                <VisualState
                  x:Name="Normal" />
                <VisualState
                  x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation
                      Duration="0"
                      To="1"
                      Storyboard.TargetProperty="Opacity"
                      Storyboard.TargetName="PART_DisabledVisual" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              Background="{TemplateBinding Background}"
              CornerRadius="1">
              <Border>
                <Grid>
                  <Grid.Resources />
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition
                      Width="Auto" />
                    <ColumnDefinition
                      Width="Auto" />
                    <ColumnDefinition
                      Width="Auto" />
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition
                      Height="Auto" />
                    <RowDefinition
                      Height="*" />
                  </Grid.RowDefinitions>
                  <Button
                    x:Name="PART_PreviousButton"
                    Template="{StaticResource PreviousButtonTemplate}"
                    Focusable="False"
                    HorizontalAlignment="Left"
                    Grid.Column="0"
                    Grid.Row="0"
                    Height="20"
                    Width="28" />
                  <Button
                    x:Name="PART_HeaderButton"
                    FontWeight="Bold"
                    Focusable="False"
                    FontSize="10.5"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Grid.Column="1"
                    Grid.Row="0"
                    Template="{StaticResource HeaderButtonTemplate}" />
                  <Button
                    x:Name="PART_NextButton"
                    Focusable="False"
                    HorizontalAlignment="Right"
                    Grid.Column="2"
                    Grid.Row="0"
                    Template="{StaticResource NextButtonTemplate}"
                    Height="20"
                    Width="28" />
                  <Grid
                    x:Name="PART_MonthView"
                    Visibility="Visible"
                    Grid.ColumnSpan="3"
                    Grid.Row="1"
                    Margin="6,-1,6,6"
                    HorizontalAlignment="Center">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition
                        Width="Auto" />
                      <ColumnDefinition
                        Width="Auto" />
                      <ColumnDefinition
                        Width="Auto" />
                      <ColumnDefinition
                        Width="Auto" />
                      <ColumnDefinition
                        Width="Auto" />
                      <ColumnDefinition
                        Width="Auto" />
                      <ColumnDefinition
                        Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition
                        Height="Auto" />
                      <RowDefinition
                        Height="Auto" />
                      <RowDefinition
                        Height="Auto" />
                      <RowDefinition
                        Height="Auto" />
                      <RowDefinition
                        Height="Auto" />
                      <RowDefinition
                        Height="Auto" />
                      <RowDefinition
                        Height="Auto" />
                    </Grid.RowDefinitions>
                  </Grid>
                  <Grid
                    x:Name="PART_YearView"
                    Visibility="Hidden"
                    Grid.ColumnSpan="3"
                    Grid.Row="1"
                    HorizontalAlignment="Center"
                    Margin="6,-3,7,6">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition
                        Width="Auto" />
                      <ColumnDefinition
                        Width="Auto" />
                      <ColumnDefinition
                        Width="Auto" />
                      <ColumnDefinition
                        Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition
                        Height="Auto" />
                      <RowDefinition
                        Height="Auto" />
                      <RowDefinition
                        Height="Auto" />
                    </Grid.RowDefinitions>
                  </Grid>
                </Grid>
              </Border>
            </Border>
            <Rectangle
              x:Name="PART_DisabledVisual"
              Fill="{StaticResource DisabledColor}"
              Opacity="0"
              RadiusY="2"
              RadiusX="2"
              Stretch="Fill"
              Stroke="{StaticResource DisabledColor}"
              StrokeThickness="1"
              Visibility="Collapsed" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsEnabled"
              Value="False">
              <Setter
                Property="Visibility"
                TargetName="PART_DisabledVisual"
                Value="Visible" />
            </Trigger>
            <DataTrigger
              Binding="{Binding DisplayMode, &#xD;&#xA;                              RelativeSource={RelativeSource FindAncestor, &#xD;&#xA;                              AncestorType={x:Type Calendar}}}"
              Value="Year">
              <Setter
                Property="Visibility"
                TargetName="PART_MonthView"
                Value="Hidden" />
              <Setter
                Property="Visibility"
                TargetName="PART_YearView"
                Value="Visible" />
            </DataTrigger>
            <DataTrigger
              Binding="{Binding DisplayMode, &#xD;&#xA;                                          RelativeSource={RelativeSource FindAncestor, &#xD;&#xA;                                          AncestorType={x:Type Calendar}}}"
              Value="Decade">
              <Setter
                Property="Visibility"
                TargetName="PART_MonthView"
                Value="Hidden" />
              <Setter
                Property="Visibility"
                TargetName="PART_YearView"
                Value="Visible" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style
    x:Key="CalendarTheme"
    TargetType="{x:Type Calendar}">
    <Setter
      Property="CalendarButtonStyle"
      Value="{StaticResource CalendarButtonStyle}" />
    <Setter
      Property="CalendarDayButtonStyle"
      Value="{StaticResource CalendarDayButtonStyle}" />
    <Setter
      Property="CalendarItemStyle"
      Value="{StaticResource CalendarItemStyle}" />
    <Setter
      Property="Foreground"
      Value="#FF333333" />
    <Setter
      Property="Background">
      <Setter.Value>
        <LinearGradientBrush
          EndPoint="0.5,1"
          StartPoint="0.5,0">
          <GradientStop
            Color="#FF696969"
            Offset="0" />
          <GradientStop
            Color="#FF595959"
            Offset="0.07" />
          <GradientStop
            Color="#FF393939"
            Offset="0.07" />
          <GradientStop
            Color="#FF494949"
            Offset="0.14" />
          <GradientStop
            Color="#FF666666"
            Offset="0.14" />
          <GradientStop
            Color="#FF555555"
            Offset="1" />
        </LinearGradientBrush>
      </Setter.Value>
    </Setter>
    <Setter
      Property="BorderBrush"
      Value="{StaticResource NormalBorderBrush}" />
    <Setter
      Property="BorderThickness"
      Value="1" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type Calendar}">
          <StackPanel
            x:Name="PART_Root"
            HorizontalAlignment="Center">
            <CalendarItem
              x:Name="PART_CalendarItem"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              Background="{TemplateBinding Background}"
              Style="{TemplateBinding CalendarItemStyle}" />
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style
    TargetType="{x:Type DatePicker}"
    BasedOn="{x:Null}">
    <Setter
      Property="BorderBrush"
      Value="{StaticResource NormalBrush}" />
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Setter
      Property="CalendarStyle"
      Value="{StaticResource CalendarTheme}" />
  </Style>
  <Style
    TargetType="{x:Type Calendar}"
    BasedOn="{StaticResource CalendarTheme}" />
  <Style
    TargetType="{x:Type CalendarDayButton}"
    BasedOn="{x:Null}">
    <Style.Triggers>
      <Trigger
        Property="IsSelected"
        Value="True">
        <Setter
          Property="Background"
          Value="{StaticResource NormalBrush}" />
      </Trigger>
      <Trigger
        Property="IsHighlighted"
        Value="True">
        <Setter
          Property="Background"
          Value="{StaticResource NormalBrush}" />
        <Setter
          Property="Foreground"
          Value="{StaticResource TextBrush}" />
        <Setter
          Property="Opacity"
          Value="1" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style
    TargetType="{x:Type DatePickerTextBox}"
    BasedOn="{x:Null}">
    <Setter
      Property="BorderBrush"
      Value="{StaticResource NormalBrush}" />
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type DatePickerTextBox}">
          <TextBox
            BorderThickness="0"
            Text="{TemplateBinding Text}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate
    x:Key="ButtonTemplate"
    TargetType="{x:Type Button}">
    <ControlTemplate.Resources>
      <Storyboard
        x:Key="HoverOn">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="HoverShineBorder"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.1000000"
            Value="1" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="HoverBorder"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.1000000"
            Value="1" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="HoverOff">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="HoverShineBorder"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.3000000"
            Value="0" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="HoverBorder"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.3000000"
            Value="0" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="PressedOn">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="PressedBorder"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.1000000"
            Value="1" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="PressedOff">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="PressedBorder"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.3000000"
            Value="0" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="FocusedOn">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="FocusVisualElement"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.1000000"
            Value="1" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="FocussedOff">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="FocusVisualElement"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.3000000"
            Value="0" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
    </ControlTemplate.Resources>
    <Grid
      x:Name="Grid">
      <Border
        x:Name="Background"
        Background="{TemplateBinding Background}"
        BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}"
        CornerRadius="3" />
      <Border
        x:Name="HoverBorder"
        Opacity="0"
        Background="{StaticResource HoverBrush}"
        BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}"
        CornerRadius="3" />
      <Border
        x:Name="HoverShineBorder"
        Opacity="0"
        Background="{StaticResource HoverShineBrush}"
        BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}"
        CornerRadius="3" />
      <Border
        x:Name="PressedBorder"
        Opacity="0"
        BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}"
        CornerRadius="3"
        Background="{StaticResource PressedBrush}" />
      <Border
        x:Name="ShineBorder"
        BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}"
        CornerRadius="3"
        Background="{StaticResource ShineBrush}"
        Opacity="1" />
      <ContentPresenter
        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
        Margin="{TemplateBinding Padding}"
        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
        RecognizesAccessKey="True" />
      <Border
        x:Name="FocusVisualElement"
        IsHitTestVisible="false"
        BorderBrush="{StaticResource HoverShineBrush}"
        BorderThickness="1"
        CornerRadius="3,3,3,3"
        Margin="1,1,1,1"
        Opacity="0" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger
        Property="IsDefault"
        Value="True">
        <Setter
          Property="BorderBrush"
          TargetName="ShineBorder"
          Value="{StaticResource DefaultedBorderBrush}" />
      </Trigger>
      <Trigger
        Property="IsKeyboardFocused"
        Value="true">
        <Trigger.ExitActions>
          <BeginStoryboard
            Storyboard="{StaticResource FocussedOff}"
            x:Name="FocussedOff_BeginStoryboard" />
        </Trigger.ExitActions>
        <Trigger.EnterActions>
          <BeginStoryboard
            Storyboard="{StaticResource FocusedOn}"
            x:Name="FocusedOn_BeginStoryboard" />
        </Trigger.EnterActions>
      </Trigger>
      <Trigger
        Property="IsMouseOver"
        Value="true">
        <Trigger.ExitActions>
          <BeginStoryboard
            Storyboard="{StaticResource HoverOff}"
            x:Name="HoverOff_BeginStoryboard" />
        </Trigger.ExitActions>
        <Trigger.EnterActions>
          <BeginStoryboard
            Storyboard="{StaticResource HoverOn}" />
        </Trigger.EnterActions>
      </Trigger>
      <Trigger
        Property="IsPressed"
        Value="true">
        <Trigger.ExitActions>
          <BeginStoryboard
            Storyboard="{StaticResource PressedOff}" />
        </Trigger.ExitActions>
        <Trigger.EnterActions>
          <BeginStoryboard
            Storyboard="{StaticResource PressedOn}" />
        </Trigger.EnterActions>
      </Trigger>
      <Trigger
        Property="IsEnabled"
        Value="true" />
      <Trigger
        Property="IsEnabled"
        Value="false">
        <Setter
          Property="Background"
          Value="{StaticResource DisabledBackgroundBrush}"
          TargetName="Background" />
        <Setter
          Property="BorderBrush"
          Value="{StaticResource DisabledBorderBrush}"
          TargetName="ShineBorder" />
        <Setter
          Property="Opacity"
          TargetName="Grid"
          Value="0.5" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style
    TargetType="{x:Type Button}"
    BasedOn="{x:Null}">
    <Setter
      Property="Background"
      Value="{StaticResource NormalBrush}" />
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Setter
      Property="BorderBrush"
      Value="{StaticResource NormalBrush}" />
    <Setter
      Property="Padding"
      Value="10,2" />
    <Setter
      Property="Template"
      Value="{StaticResource ButtonTemplate}" />
    <Setter
      Property="Focusable"
      Value="False" />
    <Setter
      Property="BorderThickness"
      Value="1" />
  </Style>
  <Style
    x:Key="RadioButtonFocusVisual">
    <Setter
      Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle
              Margin="15,0,0,0"
              Stroke="#60000000"
              StrokeThickness="1"
              StrokeDashArray="1 2" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style
    x:Key="CheckBoxFocusVisual">
    <Setter
      Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle
              Margin="15,0,0,0"
              Stroke="#60000000"
              StrokeThickness="1"
              StrokeDashArray="1 2" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate
    x:Key="CheckBoxTemplate"
    TargetType="{x:Type CheckBox}">
    <ControlTemplate.Resources>
      <Storyboard
        x:Key="HoverOn">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="BackgroundOverlay"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.1000000"
            Value="1" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="HoverOff">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="BackgroundOverlay"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.4000000"
            Value="0" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="PressedOn">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="PressedRectangle"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.1000000"
            Value="1" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="PressedOff">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="PressedRectangle"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.3000000"
            Value="0" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="CheckedTrue">
        <DoubleAnimationUsingKeyFrames
          Storyboard.TargetName="CheckIcon"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.1000000"
            Value="1" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="CheckedFalse">
        <DoubleAnimationUsingKeyFrames
          Storyboard.TargetName="CheckIcon"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.4000000"
            Value="0" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="IndeterminateOn">
        <DoubleAnimationUsingKeyFrames
          Storyboard.TargetName="IndeterminateIcon"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.2000000"
            Value="1" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="IndeterminateOff">
        <DoubleAnimationUsingKeyFrames
          Storyboard.TargetName="IndeterminateIcon"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.4000000"
            Value="0" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="FocussedOn">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="ContentFocusVisualElement"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.1000000"
            Value="1" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="FocussedOff">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="ContentFocusVisualElement"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.3000000"
            Value="0" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
    </ControlTemplate.Resources>
    <BulletDecorator
      Background="Transparent"
      x:Name="bulletDecorator">
      <BulletDecorator.Bullet>
        <Grid
          Width="16"
          Height="16">
          <Rectangle
            Height="14"
            Margin="1"
            x:Name="Background"
            Width="14"
            Fill="{TemplateBinding Background}"
            Stroke="{TemplateBinding BorderBrush}"
            StrokeThickness="{TemplateBinding BorderThickness}" />
          <Rectangle
            Height="14"
            Margin="1"
            x:Name="BackgroundOverlay"
            Width="14"
            Opacity="0"
            Fill="{x:Null}"
            Stroke="{StaticResource HoverBrush}"
            StrokeThickness="2" />
          <Rectangle
            Height="16"
            x:Name="PressedRectangle"
            Width="16"
            IsHitTestVisible="false"
            Opacity="0"
            Stroke="{StaticResource HoverBrush}"
            StrokeThickness="1" />
          <Path
            Height="10"
            Margin="1,1,0,1.5"
            x:Name="CheckIcon"
            Width="10.5"
            Opacity="0"
            Fill="{StaticResource GlyphBrush}"
            Stretch="Fill"
            Data="M102.03442,598.79645 L105.22962,597.78918 L106.78825,600.42358 C106.78825,600.42358 108.51028,595.74304 110.21724,593.60419 C112.00967,591.35822 114.89314,591.42316 114.89314,591.42316 C114.89314,591.42316 112.67844,593.42645 111.93174,594.44464 C110.7449,596.06293 107.15683,604.13837 107.15683,604.13837 z" />
          <Rectangle
            Height="8"
            x:Name="IndeterminateIcon"
            Width="10"
            Opacity="0"
            Fill="{StaticResource GlyphBrush}" />
          <Rectangle
            Height="14"
            x:Name="DisabledVisualElement"
            Width="14"
            Opacity="0"
            Fill="{StaticResource DisabledBackgroundBrush}" />
          <Rectangle
            Height="16"
            x:Name="ContentFocusVisualElement"
            Width="16"
            IsHitTestVisible="false"
            Opacity="0"
            Stroke="{StaticResource HoverShineBrush}"
            StrokeThickness="1" />
          <Rectangle
            Height="12"
            x:Name="ShineRectangle"
            Width="14"
            IsHitTestVisible="false"
            Opacity="1"
            Stroke="{x:Null}"
            StrokeThickness="1"
            Fill="{StaticResource ShineBrush}"
            Margin="2,2,2,2" />
        </Grid>
      </BulletDecorator.Bullet>
      <ContentPresenter
        RecognizesAccessKey="True"
        Margin="5,0,0,0"
        VerticalAlignment="Top"
        HorizontalAlignment="Left" />
    </BulletDecorator>
    <ControlTemplate.Triggers>
      <Trigger
        Property="IsFocused"
        Value="True">
        <Trigger.ExitActions>
          <BeginStoryboard
            Storyboard="{StaticResource FocussedOff}"
            x:Name="FocussedOff_BeginStoryboard" />
        </Trigger.ExitActions>
        <Trigger.EnterActions>
          <BeginStoryboard
            Storyboard="{StaticResource FocussedOn}"
            x:Name="FocussedOn_BeginStoryboard" />
        </Trigger.EnterActions>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition
            Property="IsChecked"
            Value="True" />
          <Condition
            Property="IsThreeState"
            Value="True" />
        </MultiTrigger.Conditions>
        <MultiTrigger.EnterActions>
          <BeginStoryboard
            x:Name="ThreeStateOn_BeginStoryboard"
            Storyboard="{StaticResource CheckedFalse}" />
        </MultiTrigger.EnterActions>
        <MultiTrigger.ExitActions>
          <BeginStoryboard
            x:Name="ThreeStateOff_BeginStoryboard"
            Storyboard="{StaticResource CheckedTrue}" />
        </MultiTrigger.ExitActions>
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition
            Property="IsChecked"
            Value="{x:Null}" />
          <Condition
            Property="IsThreeState"
            Value="True" />
        </MultiTrigger.Conditions>
        <MultiTrigger.EnterActions>
          <BeginStoryboard
            x:Name="ThreeStateOn1_BeginStoryboard"
            Storyboard="{StaticResource IndeterminateOn}" />
        </MultiTrigger.EnterActions>
        <MultiTrigger.ExitActions>
          <BeginStoryboard
            x:Name="ThreeStateOff1_BeginStoryboard"
            Storyboard="{StaticResource IndeterminateOff}" />
        </MultiTrigger.ExitActions>
        <Setter
          Property="Visibility"
          TargetName="CheckIcon"
          Value="Hidden" />
      </MultiTrigger>
      <Trigger
        Property="IsChecked"
        Value="True">
        <Trigger.ExitActions>
          <BeginStoryboard
            Storyboard="{StaticResource CheckedFalse}"
            x:Name="CheckedTrue_BeginStoryboard" />
        </Trigger.ExitActions>
        <Trigger.EnterActions>
          <BeginStoryboard
            x:Name="CheckedTrue_BeginStoryboard1"
            Storyboard="{StaticResource CheckedTrue}" />
        </Trigger.EnterActions>
      </Trigger>
      <Trigger
        Property="IsMouseOver"
        Value="true">
        <Trigger.EnterActions>
          <BeginStoryboard
            Storyboard="{StaticResource HoverOn}" />
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <BeginStoryboard
            Storyboard="{StaticResource HoverOff}" />
        </Trigger.ExitActions>
      </Trigger>
      <Trigger
        Property="IsEnabled"
        Value="false">
        <Setter
          Property="Fill"
          Value="{StaticResource DisabledBackgroundBrush}"
          TargetName="Background" />
        <Setter
          Property="Stroke"
          Value="{StaticResource DisabledBorderBrush}"
          TargetName="Background" />
        <Setter
          Property="Foreground"
          Value="{StaticResource DisabledForegroundBrush}" />
        <Setter
          Property="Opacity"
          TargetName="bulletDecorator"
          Value="0.5" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style
    TargetType="{x:Type CheckBox}">
    <Setter
      Property="SnapsToDevicePixels"
      Value="true" />
    <Setter
      Property="FocusVisualStyle"
      Value="{StaticResource CheckBoxFocusVisual}" />
    <Setter
      Property="Background"
      Value="{StaticResource NormalBrush}" />
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Setter
      Property="BorderBrush"
      Value="{StaticResource NormalBorderBrush}" />
    <Setter
      Property="Template"
      Value="{StaticResource CheckBoxTemplate}" />
  </Style>
  <ControlTemplate
    x:Key="RadioButtonTemplate"
    TargetType="{x:Type RadioButton}">
    <ControlTemplate.Resources>
      <Storyboard
        x:Key="HoverOn">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="BackgroundOverlay"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.1000000"
            Value="1" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="HoverOff">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="BackgroundOverlay"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.3000000"
            Value="0" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="PressedOn">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="PressedEllipse"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.1000000"
            Value="1" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="PressedOff">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="PressedEllipse"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.3000000"
            Value="0" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="CheckedOn">
        <DoubleAnimationUsingKeyFrames
          Storyboard.TargetName="CheckIcon"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.1000000"
            Value="1" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="CheckedOff">
        <DoubleAnimationUsingKeyFrames
          Storyboard.TargetName="CheckIcon"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.3000000"
            Value="0" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="FocussedOn">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="ContentFocusVisualElement"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.1000000"
            Value="1" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="FocussedOff">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="ContentFocusVisualElement"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.3000000"
            Value="0" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
    </ControlTemplate.Resources>
    <BulletDecorator
      Background="Transparent"
      x:Name="bulletDecorator">
      <BulletDecorator.Bullet>
        <Grid
          Width="16"
          Height="16">
          <Ellipse
            Height="14"
            Margin="1"
            x:Name="Background"
            Width="14"
            Fill="{TemplateBinding Background}"
            Stroke="{TemplateBinding BorderBrush}"
            StrokeThickness="{TemplateBinding BorderThickness}" />
          <Ellipse
            Height="14"
            Margin="1"
            x:Name="BackgroundOverlay"
            Width="14"
            StrokeThickness="2"
            Stroke="{StaticResource HoverBrush}"
            Opacity="0" />
          <Ellipse
            Height="14"
            Margin="1"
            x:Name="PressedEllipse"
            Width="14"
            StrokeThickness="{TemplateBinding BorderThickness}"
            Stroke="{StaticResource HoverBrush}"
            Opacity="0" />
          <Ellipse
            Height="6"
            x:Name="CheckIcon"
            Width="6"
            Opacity="0"
            Fill="{StaticResource GlyphBrush}" />
          <Ellipse
            Height="14"
            x:Name="DisabledVisualElement"
            Width="14"
            Opacity="0"
            Fill="{StaticResource DisabledBackgroundBrush}" />
          <Ellipse
            Height="16"
            x:Name="ContentFocusVisualElement"
            Width="16"
            IsHitTestVisible="false"
            Opacity="0"
            Stroke="{StaticResource HoverShineBrush}"
            StrokeThickness="1" />
          <Ellipse
            Height="12"
            Margin="2,2,2,2"
            x:Name="ShineEllipse"
            Width="12"
            StrokeThickness="{TemplateBinding BorderThickness}"
            Stroke="{x:Null}"
            Fill="{StaticResource ShineBrush}" />
        </Grid>
      </BulletDecorator.Bullet>
      <ContentPresenter
        RecognizesAccessKey="True"
        Margin="5,0,0,0" />
    </BulletDecorator>
    <ControlTemplate.Triggers>
      <Trigger
        Property="IsFocused"
        Value="True">
        <Trigger.ExitActions>
          <BeginStoryboard
            Storyboard="{StaticResource FocussedOff}"
            x:Name="FocussedOff_BeginStoryboard" />
        </Trigger.ExitActions>
        <Trigger.EnterActions>
          <BeginStoryboard
            Storyboard="{StaticResource FocussedOn}"
            x:Name="FocussedOn_BeginStoryboard" />
        </Trigger.EnterActions>
      </Trigger>
      <Trigger
        Property="IsChecked"
        Value="false">
        <Trigger.ExitActions>
          <BeginStoryboard
            x:Name="CheckedOn_BeginStoryboard"
            Storyboard="{StaticResource CheckedOn}" />
        </Trigger.ExitActions>
        <Trigger.EnterActions>
          <BeginStoryboard
            x:Name="CheckedOff_BeginStoryboard"
            Storyboard="{StaticResource CheckedOff}" />
        </Trigger.EnterActions>
      </Trigger>
      <Trigger
        Property="IsChecked"
        Value="True" />
      <Trigger
        Property="IsMouseOver"
        Value="true">
        <Trigger.ExitActions>
          <BeginStoryboard
            x:Name="HoverOff_BeginStoryboard"
            Storyboard="{StaticResource HoverOff}" />
        </Trigger.ExitActions>
        <Trigger.EnterActions>
          <BeginStoryboard
            Storyboard="{StaticResource HoverOn}" />
        </Trigger.EnterActions>
      </Trigger>
      <Trigger
        Property="IsPressed"
        Value="true">
        <Trigger.ExitActions>
          <BeginStoryboard
            x:Name="PressedOff_BeginStoryboard"
            Storyboard="{StaticResource PressedOff}" />
        </Trigger.ExitActions>
        <Trigger.EnterActions>
          <BeginStoryboard
            x:Name="PressedOn_BeginStoryboard"
            Storyboard="{StaticResource PressedOn}" />
        </Trigger.EnterActions>
      </Trigger>
      <Trigger
        Property="IsEnabled"
        Value="false">
        <Setter
          Property="Fill"
          TargetName="Background"
          Value="{StaticResource DisabledBackgroundBrush}" />
        <Setter
          Property="Stroke"
          TargetName="Background"
          Value="{StaticResource DisabledBorderBrush}" />
        <Setter
          Property="Foreground"
          Value="{StaticResource DisabledForegroundBrush}" />
        <Setter
          Property="Opacity"
          TargetName="bulletDecorator"
          Value="0.5" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style
    TargetType="{x:Type RadioButton}">
    <Setter
      Property="SnapsToDevicePixels"
      Value="true" />
    <Setter
      Property="FocusVisualStyle"
      Value="{StaticResource RadioButtonFocusVisual}" />
    <Setter
      Property="Background"
      Value="{StaticResource NormalBrush}" />
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Setter
      Property="BorderBrush"
      Value="{StaticResource NormalBorderBrush}" />
    <Setter
      Property="Template"
      Value="{StaticResource RadioButtonTemplate}" />
    <Style.Triggers />
  </Style>
  <ControlTemplate
    x:Key="ScrollBarButtonTemplate"
    TargetType="{x:Type RepeatButton}">
    <ControlTemplate.Resources>
      <Storyboard
        x:Key="HoverOn">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="HoverShineBorder"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.1000000"
            Value="1" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="HoverBorder"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.1000000"
            Value="1" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="HoverOff">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="HoverShineBorder"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.3000000"
            Value="0" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="HoverBorder"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.3000000"
            Value="0" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="PressedOn">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="PressedBorder"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.1000000"
            Value="1" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="PressedOff">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="PressedBorder"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.3000000"
            Value="0" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="FocusedOn">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="FocusVisualElement"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.1000000"
            Value="1" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="FocussedOff">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="FocusVisualElement"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.3000000"
            Value="0" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
    </ControlTemplate.Resources>
    <Grid
      x:Name="Grid">
      <Border
        x:Name="Background"
        Background="{TemplateBinding Background}"
        BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}"
        CornerRadius="3" />
      <Border
        x:Name="HoverBorder"
        Opacity="0"
        Background="{StaticResource HoverBrush}"
        BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}"
        CornerRadius="3" />
      <Border
        x:Name="HoverShineBorder"
        Opacity="0"
        Background="{StaticResource HoverShineBrush}"
        BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}"
        CornerRadius="3" />
      <Border
        x:Name="PressedBorder"
        Opacity="0"
        BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}"
        CornerRadius="3"
        Background="{StaticResource PressedBrush}" />
      <Border
        x:Name="ShineBorder"
        BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}"
        CornerRadius="3"
        Background="{StaticResource ShineBrush}"
        Opacity="1" />
      <Path
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Fill="{StaticResource GlyphBrush}"
        Data="{Binding Path=Content,&#xD;&#xA;                        RelativeSource={RelativeSource TemplatedParent}}" />
      <Border
        x:Name="FocusVisualElement"
        IsHitTestVisible="false"
        BorderBrush="{StaticResource HoverShineBrush}"
        BorderThickness="1"
        CornerRadius="3,3,3,3"
        Margin="1,1,1,1"
        Opacity="0" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger
        Property="IsPressed"
        Value="true">
        <Trigger.ExitActions>
          <BeginStoryboard
            Storyboard="{StaticResource PressedOff}" />
        </Trigger.ExitActions>
        <Trigger.EnterActions>
          <BeginStoryboard
            Storyboard="{StaticResource PressedOn}" />
        </Trigger.EnterActions>
      </Trigger>
      <Trigger
        Property="IsEnabled"
        Value="true" />
      <Trigger
        Property="IsEnabled"
        Value="false">
        <Setter
          Property="Background"
          Value="{StaticResource DisabledBackgroundBrush}"
          TargetName="Background" />
        <Setter
          Property="BorderBrush"
          Value="{StaticResource DisabledBorderBrush}"
          TargetName="HoverBorder" />
        <Setter
          Property="Opacity"
          TargetName="Grid"
          Value="0.5" />
      </Trigger>
      <Trigger
        Property="IsMouseOver"
        Value="true">
        <Trigger.ExitActions>
          <BeginStoryboard
            Storyboard="{StaticResource HoverOff}"
            x:Name="HoverOff_BeginStoryboard" />
        </Trigger.ExitActions>
        <Trigger.EnterActions>
          <BeginStoryboard
            Storyboard="{StaticResource HoverOn}" />
        </Trigger.EnterActions>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <!-- SrollViewer ScrollBar Repeat Buttons (at each end) -->
  <Style
    x:Key="ScrollBarLineButton"
    TargetType="{x:Type RepeatButton}">
    <Setter
      Property="Background"
      Value="{StaticResource NormalBrush}" />
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Setter
      Property="BorderBrush"
      Value="{StaticResource NormalBrush}" />
    <Setter
      Property="BorderThickness"
      Value="1" />
    <Setter
      Property="SnapsToDevicePixels"
      Value="True" />
    <Setter
      Property="OverridesDefaultStyle"
      Value="true" />
    <Setter
      Property="Focusable"
      Value="false" />
    <Setter
      Property="Template"
      Value="{StaticResource ScrollBarButtonTemplate}" />
  </Style>
  <ControlTemplate
    x:Key="VerticalScrollBarButtonTemplate"
    TargetType="{x:Type RepeatButton}">
    <ControlTemplate.Resources>
      <Storyboard
        x:Key="HoverOn">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="HoverShineBorder"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.1000000"
            Value="1" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="HoverBorder"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.1000000"
            Value="1" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="HoverOff">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="HoverShineBorder"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.3000000"
            Value="0" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="HoverBorder"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.3000000"
            Value="0" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="PressedOn">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="PressedBorder"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.1000000"
            Value="1" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="PressedOff">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="PressedBorder"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.3000000"
            Value="0" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="FocusedOn">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="FocusVisualElement"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.1000000"
            Value="1" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="FocussedOff">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="FocusVisualElement"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.3000000"
            Value="0" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
    </ControlTemplate.Resources>
    <Grid
      x:Name="Grid">
      <Border
        x:Name="Background"
        Background="{TemplateBinding Background}"
        BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}"
        CornerRadius="3" />
      <Border
        x:Name="HoverBorder"
        Opacity="0"
        Background="{StaticResource HoverBrush}"
        BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}"
        CornerRadius="3" />
      <Border
        x:Name="HoverShineBorder"
        Opacity="0"
        Background="{StaticResource VerticalHoverShineBrush}"
        BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}"
        CornerRadius="3" />
      <Border
        x:Name="PressedBorder"
        Opacity="0"
        BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}"
        CornerRadius="3"
        Background="{StaticResource VerticalPressedBrush}" />
      <Border
        x:Name="ShineBorder"
        BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}"
        CornerRadius="3"
        Background="{StaticResource VerticalShineBrush}"
        Opacity="1" />
      <Path
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Fill="{StaticResource GlyphBrush}"
        Data="{Binding Path=Content,&#xD;&#xA;                        RelativeSource={RelativeSource TemplatedParent}}" />
      <Border
        x:Name="FocusVisualElement"
        IsHitTestVisible="false"
        BorderBrush="{StaticResource HoverShineBrush}"
        BorderThickness="1"
        CornerRadius="3,3,3,3"
        Margin="1,1,1,1"
        Opacity="0" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger
        Property="IsPressed"
        Value="true">
        <Trigger.ExitActions>
          <BeginStoryboard
            Storyboard="{StaticResource PressedOff}" />
        </Trigger.ExitActions>
        <Trigger.EnterActions>
          <BeginStoryboard
            Storyboard="{StaticResource PressedOn}" />
        </Trigger.EnterActions>
      </Trigger>
      <Trigger
        Property="IsEnabled"
        Value="true" />
      <Trigger
        Property="IsEnabled"
        Value="false">
        <Setter
          Property="Background"
          Value="{StaticResource DisabledBackgroundBrush}"
          TargetName="Background" />
        <Setter
          Property="BorderBrush"
          Value="{StaticResource DisabledBorderBrush}"
          TargetName="HoverBorder" />
        <Setter
          Property="Opacity"
          TargetName="Grid"
          Value="0.5" />
      </Trigger>
      <Trigger
        Property="IsMouseOver"
        Value="true">
        <Trigger.ExitActions>
          <BeginStoryboard
            Storyboard="{StaticResource HoverOff}"
            x:Name="HoverOff_BeginStoryboard" />
        </Trigger.ExitActions>
        <Trigger.EnterActions>
          <BeginStoryboard
            Storyboard="{StaticResource HoverOn}" />
        </Trigger.EnterActions>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style
    x:Key="VerticalScrollBarLineButton"
    TargetType="{x:Type RepeatButton}">
    <Setter
      Property="Background"
      Value="{StaticResource NormalBrush}" />
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Setter
      Property="BorderBrush"
      Value="{StaticResource NormalBrush}" />
    <Setter
      Property="BorderThickness"
      Value="1" />
    <Setter
      Property="SnapsToDevicePixels"
      Value="True" />
    <Setter
      Property="OverridesDefaultStyle"
      Value="true" />
    <Setter
      Property="Focusable"
      Value="false" />
    <Setter
      Property="Template"
      Value="{StaticResource VerticalScrollBarButtonTemplate}" />
  </Style>
  <!-- ScrollViewer ScrollBar Repeat Buttons (The part in the middle, 
          not the thumb the long area between the buttons ) -->
  <Style
    x:Key="NuclearScrollRepeatButtonStyle"
    TargetType="{x:Type RepeatButton}">
    <Setter
      Property="Background"
      Value="Transparent" />
    <Setter
      Property="BorderBrush"
      Value="Transparent" />
    <Setter
      Property="IsTabStop"
      Value="false" />
    <Setter
      Property="Focusable"
      Value="false" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type RepeatButton}">
          <Grid>
            <Rectangle
              Fill="{TemplateBinding Background}"
              Stroke="{TemplateBinding BorderBrush}"
              StrokeThickness="{TemplateBinding BorderThickness}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!-- ScrollViewer ScrollBar Thumb, that part that can be dragged
        up/down or left/right Buttons -->
  <Style
    x:Key="ScrollBarThumb"
    TargetType="{x:Type Thumb}">
    <Setter
      Property="SnapsToDevicePixels"
      Value="True" />
    <Setter
      Property="OverridesDefaultStyle"
      Value="true" />
    <Setter
      Property="IsTabStop"
      Value="false" />
    <Setter
      Property="Focusable"
      Value="false" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type Thumb}">
          <ControlTemplate.Resources>
            <Storyboard
              x:Key="HoverOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverShineBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="HoverOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverShineBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="FocusedOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="FocusVisualElement"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="FocussedOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="FocusVisualElement"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid
            x:Name="Grid">
            <Border
              x:Name="Background"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="3" />
            <Border
              x:Name="HoverBorder"
              Opacity="0"
              Background="{StaticResource HoverBrush}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="3" />
            <Border
              x:Name="HoverShineBorder"
              Opacity="0"
              Background="{StaticResource HoverShineBrush}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="3" />
            <Border
              x:Name="ShineBorder"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="3"
              Background="{StaticResource ShineBrush}"
              Opacity="1" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsEnabled"
              Value="true" />
            <Trigger
              Property="IsEnabled"
              Value="false">
              <Setter
                Property="Background"
                Value="{StaticResource DisabledBackgroundBrush}"
                TargetName="Background" />
              <Setter
                Property="BorderBrush"
                Value="{StaticResource ControlBackgroundBrush}" />
              <Setter
                Property="Opacity"
                TargetName="Grid"
                Value="0.5" />
            </Trigger>
            <Trigger
              Property="IsMouseOver"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOff}"
                  x:Name="HoverOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOn}" />
              </Trigger.EnterActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style
    x:Key="VerticalScrollBarThumb"
    TargetType="{x:Type Thumb}">
    <Setter
      Property="SnapsToDevicePixels"
      Value="True" />
    <Setter
      Property="OverridesDefaultStyle"
      Value="true" />
    <Setter
      Property="IsTabStop"
      Value="false" />
    <Setter
      Property="Focusable"
      Value="false" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type Thumb}">
          <ControlTemplate.Resources>
            <Storyboard
              x:Key="HoverOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverShineBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="HoverOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverShineBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="FocusedOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="FocusVisualElement"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="FocussedOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="FocusVisualElement"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid
            x:Name="Grid">
            <Border
              x:Name="Background"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="3" />
            <Border
              x:Name="HoverBorder"
              Opacity="0"
              Background="{StaticResource HoverBrush}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="3" />
            <Border
              x:Name="HoverShineBorder"
              Opacity="0"
              Background="{StaticResource VerticalHoverShineBrush}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="3" />
            <Border
              x:Name="ShineBorder"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="3"
              Background="{StaticResource VerticalShineBrush}"
              Opacity="1" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsEnabled"
              Value="true" />
            <Trigger
              Property="IsEnabled"
              Value="false">
              <Setter
                Property="Background"
                Value="{StaticResource DisabledBackgroundBrush}"
                TargetName="Background" />
              <Setter
                Property="BorderBrush"
                Value="{StaticResource ControlBackgroundBrush}" />
              <Setter
                Property="Opacity"
                TargetName="Grid"
                Value="0.5" />
            </Trigger>
            <Trigger
              Property="IsMouseOver"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOff}"
                  x:Name="HoverOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOn}" />
              </Trigger.EnterActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate
    x:Key="VerticalScrollBar"
    TargetType="{x:Type ScrollBar}">
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition
          MaxHeight="18" />
        <RowDefinition
          Height="0.00001*" />
        <RowDefinition
          MaxHeight="18" />
      </Grid.RowDefinitions>
      <Border
        x:Name="Border"
        Grid.RowSpan="3"
        CornerRadius="2"
        Background="{StaticResource ControlBackgroundBrush}"
        BorderBrush="{StaticResource NormalBrush}"
        BorderThickness="1" />
      <RepeatButton
        Grid.Row="0"
        Style="{StaticResource VerticalScrollBarLineButton}"
        Height="18"
        Command="ScrollBar.LineUpCommand"
        Content="M 0 4 L 8 4 L 4 0 Z" />
      <Track
        Name="PART_Track"
        Grid.Row="1"
        IsDirectionReversed="true">
        <Track.DecreaseRepeatButton>
          <RepeatButton
            Style="{StaticResource NuclearScrollRepeatButtonStyle}"
            Command="ScrollBar.PageUpCommand" />
        </Track.DecreaseRepeatButton>
        <Track.Thumb>
          <Thumb
            Style="{StaticResource VerticalScrollBarThumb}"
            Margin="1,0,1,0"
            Background="{StaticResource NormalBrush}"
            BorderBrush="{StaticResource NormalBorderBrush}" />
        </Track.Thumb>
        <Track.IncreaseRepeatButton>
          <RepeatButton
            Style="{StaticResource NuclearScrollRepeatButtonStyle}"
            Command="ScrollBar.PageDownCommand" />
        </Track.IncreaseRepeatButton>
      </Track>
      <RepeatButton
        Grid.Row="3"
        Style="{StaticResource VerticalScrollBarLineButton}"
        Height="18"
        Command="ScrollBar.LineDownCommand"
        Content="M 0 0 L 4 4 L 8 0 Z" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger
        Property="IsEnabled"
        Value="false">
        <Setter
          Property="BorderBrush"
          Value="{StaticResource ControlBackgroundBrush}"
          TargetName="Border" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <!-- HorizontalScrollBar Template using the previously created Templates -->
  <ControlTemplate
    x:Key="HorizontalScrollBar"
    TargetType="{x:Type ScrollBar}">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition
          MaxWidth="18" />
        <ColumnDefinition
          Width="0.00001*" />
        <ColumnDefinition
          MaxWidth="18" />
      </Grid.ColumnDefinitions>
      <Border
        x:Name="Border"
        Grid.ColumnSpan="3"
        CornerRadius="2"
        Background="{StaticResource ControlBackgroundBrush}"
        BorderBrush="{StaticResource NormalBrush}"
        BorderThickness="1" />
      <RepeatButton
        Grid.Column="0"
        Style="{StaticResource ScrollBarLineButton}"
        Width="18"
        Command="ScrollBar.LineLeftCommand"
        Content="M 4 0 L 4 8 L 0 4 Z" />
      <Track
        Name="PART_Track"
        Grid.Column="1"
        IsDirectionReversed="False">
        <Track.DecreaseRepeatButton>
          <RepeatButton
            Style="{StaticResource NuclearScrollRepeatButtonStyle}"
            Command="ScrollBar.PageLeftCommand" />
        </Track.DecreaseRepeatButton>
        <Track.Thumb>
          <Thumb
            Style="{StaticResource ScrollBarThumb}"
            Margin="0,1,0,1"
            Background="{StaticResource NormalBrush}"
            BorderBrush="{StaticResource NormalBorderBrush}" />
        </Track.Thumb>
        <Track.IncreaseRepeatButton>
          <RepeatButton
            Style="{StaticResource NuclearScrollRepeatButtonStyle}"
            Command="ScrollBar.PageRightCommand" />
        </Track.IncreaseRepeatButton>
      </Track>
      <RepeatButton
        Grid.Column="3"
        Style="{StaticResource ScrollBarLineButton}"
        Width="18"
        Command="ScrollBar.LineRightCommand"
        Content="M 0 0 L 4 4 L 0 8 Z" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger
        Property="IsEnabled"
        Value="false">
        <Setter
          Property="BorderBrush"
          Value="{StaticResource ControlBackgroundBrush}"
          TargetName="Border" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <!-- Style for overall  ScrollBar -->
  <Style
    x:Key="{x:Type ScrollBar}"
    TargetType="{x:Type ScrollBar}">
    <Setter
      Property="SnapsToDevicePixels"
      Value="True" />
    <Setter
      Property="OverridesDefaultStyle"
      Value="true" />
    <Style.Triggers>
      <Trigger
        Property="Orientation"
        Value="Horizontal">
        <Setter
          Property="Width"
          Value="Auto" />
        <Setter
          Property="Height"
          Value="18" />
        <Setter
          Property="Template"
          Value="{StaticResource HorizontalScrollBar}" />
      </Trigger>
      <Trigger
        Property="Orientation"
        Value="Vertical">
        <Setter
          Property="Width"
          Value="18" />
        <Setter
          Property="Height"
          Value="Auto" />
        <Setter
          Property="Template"
          Value="{StaticResource VerticalScrollBar}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style
    x:Key="NUD_Scrollbar"
    TargetType="{x:Type ScrollBar}">
    <Setter
      Property="SnapsToDevicePixels"
      Value="True" />
    <Setter
      Property="OverridesDefaultStyle"
      Value="true" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type ScrollBar}">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition
                MaxHeight="18" />
              <RowDefinition
                MaxHeight="18" />
            </Grid.RowDefinitions>
            <Border
              x:Name="Border"
              Grid.RowSpan="3"
              CornerRadius="2"
              Background="{StaticResource ControlBackgroundBrush}"
              BorderBrush="{StaticResource NormalBrush}"
              BorderThickness="1" />
            <RepeatButton
              Grid.Row="0"
              Style="{StaticResource VerticalScrollBarLineButton}"
              Width="16"
              VerticalAlignment="Stretch"
              VerticalContentAlignment="Center"
              Command="ScrollBar.LineUpCommand"
              Content="M 0 4 L 8 4 L 4 0 Z" />
            <RepeatButton
              Grid.Row="1"
              Width="16"
              VerticalAlignment="Stretch"
              VerticalContentAlignment="Center"
              Style="{StaticResource VerticalScrollBarLineButton}"
              Command="ScrollBar.LineDownCommand"
              Content="M 0 0 L 4 4 L 8 0 Z" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsEnabled"
              Value="false">
              <Setter
                Property="BorderBrush"
                Value="{StaticResource ControlBackgroundBrush}"
                TargetName="Border" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style
    TargetType="{x:Type ScrollViewer}">
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type ScrollViewer}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition />
              <ColumnDefinition
                Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition />
              <RowDefinition
                Height="Auto" />
            </Grid.RowDefinitions>
            <Grid
              Grid.Row="0"
              Grid.Column="0"
              Background="{TemplateBinding Background}"
              Margin="{TemplateBinding Margin}">
              <ScrollContentPresenter
                Margin="{TemplateBinding Padding}" />
            </Grid>
            <ScrollBar
              x:Name="PART_VerticalScrollBar"
              Grid.Row="0"
              Grid.Column="1"
              Value="{TemplateBinding VerticalOffset}"
              Maximum="{TemplateBinding ScrollableHeight}"
              ViewportSize="{TemplateBinding ViewportHeight}"
              Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
            <ScrollBar
              x:Name="PART_HorizontalScrollBar"
              Orientation="Horizontal"
              Grid.Row="1"
              Grid.Column="0"
              Value="{TemplateBinding HorizontalOffset}"
              Maximum="{TemplateBinding ScrollableWidth}"
              ViewportSize="{TemplateBinding ViewportWidth}"
              Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
            <!--<Rectangle Grid.Row="1" Grid.Column="1" Fill="Red"/>-->
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style
    TargetType="{x:Type ListBox}">
    <Setter
      Property="SnapsToDevicePixels"
      Value="true" />
    <Setter
      Property="Background"
      Value="{StaticResource ControlBackgroundBrush}" />
    <Setter
      Property="BorderBrush"
      Value="{StaticResource WindowBorderBrush}" />
    <Setter
      Property="ScrollViewer.HorizontalScrollBarVisibility"
      Value="Auto" />
    <Setter
      Property="ScrollViewer.VerticalScrollBarVisibility"
      Value="Auto" />
    <Setter
      Property="ScrollViewer.CanContentScroll"
      Value="True" />
    <Setter
      Property="BorderThickness"
      Value="1" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type ListBox}">
          <Grid>
            <Border
              x:Name="Border"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="3"
              Background="{StaticResource ControlBackgroundBrush}" />
            <ScrollViewer
              Margin="1"
              Focusable="false"
              Background="{x:Null}">
              <StackPanel
                IsItemsHost="true" />
            </ScrollViewer>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsEnabled"
              Value="false">
              <Setter
                Property="Background"
                Value="{StaticResource DisabledBackgroundBrush}"
                TargetName="Border" />
              <Setter
                Property="BorderBrush"
                Value="{StaticResource DisabledBorderBrush}"
                TargetName="Border" />
            </Trigger>
            <Trigger
              Property="IsGrouping"
              Value="true">
              <Setter
                Property="ScrollViewer.CanContentScroll"
                Value="false" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style
    TargetType="{x:Type ListBoxItem}">
    <Setter
      Property="SnapsToDevicePixels"
      Value="true" />
    <Setter
      Property="OverridesDefaultStyle"
      Value="true" />
    <Setter
      Property="HorizontalAlignment"
      Value="Stretch" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type ListBoxItem}">
          <ControlTemplate.Resources>
            <Storyboard
              x:Key="HoverOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="HoverOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.4000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="SelectedOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="SelectedRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="SelectedOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="SelectedRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.4000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="FocussedOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="FocusVisualElement"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="FocussedOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="FocusVisualElement"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid
            SnapsToDevicePixels="true"
            Margin="1,1,1,1">
            <Rectangle
              x:Name="Background"
              IsHitTestVisible="False"
              Opacity="0.25"
              Fill="{StaticResource NormalBrush}"
              RadiusX="2"
              RadiusY="2" />
            <Rectangle
              x:Name="HoverRectangle"
              IsHitTestVisible="False"
              Opacity="0"
              Fill="{StaticResource NormalBrush}"
              RadiusX="2"
              RadiusY="2" />
            <Rectangle
              x:Name="SelectedRectangle"
              IsHitTestVisible="False"
              Opacity="0"
              Fill="{StaticResource SelectedBackgroundBrush}"
              RadiusX="2"
              RadiusY="2" />
            <ContentPresenter
              HorizontalAlignment="Stretch"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              Margin="5,2,0,2"
              x:Name="contentPresenter" />
            <Rectangle
              x:Name="FocusVisualElement"
              Stroke="{StaticResource HoverShineBrush}"
              StrokeThickness="1"
              RadiusX="2"
              RadiusY="2"
              Opacity="0" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsFocused"
              Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource FocussedOff}"
                  x:Name="FocussedOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource FocussedOn}"
                  x:Name="FocussedOn_BeginStoryboard" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger
              Property="IsSelected"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  x:Name="SelectedOff_BeginStoryboard"
                  Storyboard="{StaticResource SelectedOff}" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  x:Name="SelectedOn_BeginStoryboard"
                  Storyboard="{StaticResource SelectedOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition
                  Property="IsMouseOver"
                  Value="True" />
                <Condition
                  Property="Selector.IsSelected"
                  Value="False" />
              </MultiTrigger.Conditions>
              <MultiTrigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOn}" />
              </MultiTrigger.EnterActions>
              <MultiTrigger.ExitActions>
                <BeginStoryboard
                  x:Name="HoverOff_BeginStoryboard"
                  Storyboard="{StaticResource HoverOff}" />
              </MultiTrigger.ExitActions>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition
                  Property="Selector.IsSelected"
                  Value="True" />
                <Condition
                  Property="IsMouseOver"
                  Value="True" />
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger
              Property="IsEnabled"
              Value="false">
              <Setter
                Property="Foreground"
                Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Style.Triggers>
      <Trigger
        Property="Selector.IsSelected"
        Value="True">
        <Setter
          Property="Foreground">
          <Setter.Value>
            <SolidColorBrush
              Color="{StaticResource BlackColor}" />
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style
    x:Key="ExpanderHeaderFocusVisual">
    <Setter
      Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle
              SnapsToDevicePixels="true"
              Margin="0"
              Stroke="Black"
              StrokeDashArray="1 2"
              StrokeThickness="1" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style
    x:Key="ExpanderDownHeaderStyle"
    TargetType="{x:Type ToggleButton}">
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type ToggleButton}">
          <ControlTemplate.Resources>
            <Storyboard
              x:Key="HoverOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverShineRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="HoverOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverShineRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="PressedOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="PressedRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="PressedOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="PressedRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Border
            Padding="{TemplateBinding Padding}"
            Background="{StaticResource NormalBrush}"
            BorderBrush="{StaticResource NormalBorderBrush}"
            BorderThickness="1,1,1,1"
            CornerRadius="2,2,2,2">
            <Grid
              SnapsToDevicePixels="False"
              Background="Transparent">
              <Grid.ColumnDefinitions>
                <ColumnDefinition
                  Width="19" />
                <ColumnDefinition
                  Width="*" />
              </Grid.ColumnDefinitions>
              <Rectangle
                Margin="2,2,2,2"
                x:Name="Rectangle"
                Fill="{StaticResource NormalBrush}"
                Stroke="{StaticResource NormalBorderBrush}"
                StrokeThickness="1"
                RadiusX="1"
                RadiusY="1" />
              <Rectangle
                Margin="2,2,2,2"
                x:Name="ShineRectangle"
                Fill="{StaticResource ShineBrush}"
                Stroke="{StaticResource NormalBorderBrush}"
                StrokeThickness="1"
                RadiusX="1"
                RadiusY="1" />
              <Rectangle
                Margin="2,2,2,2"
                x:Name="HoverRectangle"
                Fill="{StaticResource HoverBrush}"
                Stroke="{StaticResource NormalBorderBrush}"
                StrokeThickness="1"
                RadiusX="1"
                RadiusY="1"
                Opacity="0" />
              <Rectangle
                Margin="2,2,2,2"
                x:Name="HoverShineRectangle"
                Fill="{StaticResource HoverShineBrush}"
                Stroke="{StaticResource NormalBorderBrush}"
                StrokeThickness="1"
                RadiusX="1"
                RadiusY="1"
                Opacity="0" />
              <Rectangle
                Margin="2,2,2,2"
                x:Name="PressedRectangle"
                Fill="{StaticResource PressedBrush}"
                Stroke="{StaticResource PressedBorderBrush}"
                StrokeThickness="1"
                RadiusX="1"
                RadiusY="1"
                Opacity="0" />
              <Path
                HorizontalAlignment="Center"
                x:Name="Up_Arrow"
                VerticalAlignment="Center"
                Fill="{StaticResource GlyphBrush}"
                Data="M 0 0 L 4 4 L 8 0 Z" />
              <Path
                Visibility="Collapsed"
                HorizontalAlignment="Center"
                x:Name="Down_Arrow"
                VerticalAlignment="Center"
                Fill="{StaticResource GlyphBrush}"
                Data="M 0 4 L 4 0 L 8 4 Z" />
              <ContentPresenter
                SnapsToDevicePixels="True"
                HorizontalAlignment="Left"
                Margin="4,2,0,2"
                VerticalAlignment="Center"
                Grid.Column="1"
                RecognizesAccessKey="True" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsChecked"
              Value="true">
              <Setter
                Property="Visibility"
                TargetName="Down_Arrow"
                Value="Visible" />
              <Setter
                Property="Visibility"
                TargetName="Up_Arrow"
                Value="Collapsed" />
            </Trigger>
            <Trigger
              Property="IsMouseOver"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOff}"
                  x:Name="HoverOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger
              Property="IsPressed"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource PressedOff}"
                  x:Name="PressedOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource PressedOn}"
                  x:Name="PressedOn_BeginStoryboard" />
              </Trigger.EnterActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style
    x:Key="ExpanderRightHeaderStyle"
    TargetType="{x:Type ToggleButton}">
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type ToggleButton}">
          <ControlTemplate.Resources>
            <Storyboard
              x:Key="HoverOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverShineRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="HoverOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverShineRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="PressedOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="PressedRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="PressedOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="PressedRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Border
            Padding="{TemplateBinding Padding}"
            Background="{StaticResource NormalBrush}"
            BorderBrush="{StaticResource NormalBorderBrush}"
            BorderThickness="1,1,1,1"
            CornerRadius="2,2,2,2">
            <Grid
              SnapsToDevicePixels="False"
              Background="Transparent">
              <Grid.RowDefinitions>
                <RowDefinition
                  Height="19" />
                <RowDefinition
                  Height="*" />
              </Grid.RowDefinitions>
              <Grid>
                <Grid.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform
                          Angle="-90" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </Grid.LayoutTransform>
                <Rectangle
                  Margin="2,2,2,2"
                  x:Name="Rectangle"
                  Fill="{StaticResource NormalBrush}"
                  Stroke="{StaticResource NormalBorderBrush}"
                  StrokeThickness="1"
                  RadiusX="1"
                  RadiusY="1" />
                <Rectangle
                  Margin="2,2,2,2"
                  x:Name="ShineRectangle"
                  Fill="{StaticResource ShineBrush}"
                  Stroke="{StaticResource NormalBorderBrush}"
                  StrokeThickness="1"
                  RadiusX="1"
                  RadiusY="1" />
                <Rectangle
                  Margin="2,2,2,2"
                  x:Name="HoverRectangle"
                  Fill="{StaticResource HoverBrush}"
                  Stroke="{StaticResource NormalBorderBrush}"
                  StrokeThickness="1"
                  RadiusX="1"
                  RadiusY="1"
                  Opacity="0" />
                <Rectangle
                  Margin="2,2,2,2"
                  x:Name="HoverShineRectangle"
                  Fill="{StaticResource HoverShineBrush}"
                  Stroke="{StaticResource NormalBorderBrush}"
                  StrokeThickness="1"
                  RadiusX="1"
                  RadiusY="1"
                  Opacity="0" />
                <Rectangle
                  Margin="2,2,2,2"
                  x:Name="PressedRectangle"
                  Fill="{StaticResource PressedBrush}"
                  Stroke="{StaticResource PressedBorderBrush}"
                  StrokeThickness="1"
                  RadiusX="1"
                  RadiusY="1"
                  Opacity="0" />
                <Path
                  HorizontalAlignment="Center"
                  x:Name="Up_Arrow"
                  VerticalAlignment="Center"
                  Fill="{StaticResource GlyphBrush}"
                  Data="M 0 0 L 4 4 L 8 0 Z" />
                <Path
                  Visibility="Collapsed"
                  HorizontalAlignment="Center"
                  x:Name="Down_Arrow"
                  VerticalAlignment="Center"
                  Fill="{StaticResource GlyphBrush}"
                  Data="M 0 4 L 4 0 L 8 4 Z" />
              </Grid>
              <ContentPresenter
                SnapsToDevicePixels="True"
                HorizontalAlignment="Center"
                Margin="2,4,4,0"
                VerticalAlignment="Top"
                Grid.Row="1"
                RecognizesAccessKey="True">
                <ContentPresenter.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform
                          Angle="-90" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </ContentPresenter.LayoutTransform>
              </ContentPresenter>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsChecked"
              Value="true">
              <Setter
                Property="Visibility"
                TargetName="Up_Arrow"
                Value="Collapsed" />
              <Setter
                Property="Visibility"
                TargetName="Down_Arrow"
                Value="Visible" />
            </Trigger>
            <Trigger
              Property="IsMouseOver"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOff}"
                  x:Name="HoverOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger
              Property="IsPressed"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource PressedOff}"
                  x:Name="PressedOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource PressedOn}"
                  x:Name="PressedOn_BeginStoryboard" />
              </Trigger.EnterActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style
    x:Key="ExpanderUpHeaderStyle"
    TargetType="{x:Type ToggleButton}">
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type ToggleButton}">
          <ControlTemplate.Resources>
            <Storyboard
              x:Key="HoverOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverShineRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="HoverOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverShineRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="PressedOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="PressedRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="PressedOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="PressedRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Border
            Padding="{TemplateBinding Padding}"
            CornerRadius="2,2,2,2"
            BorderThickness="1,1,1,1"
            Background="{StaticResource NormalBrush}"
            BorderBrush="{StaticResource NormalBorderBrush}">
            <Grid
              SnapsToDevicePixels="False"
              Background="Transparent">
              <Grid.ColumnDefinitions>
                <ColumnDefinition
                  Width="19" />
                <ColumnDefinition
                  Width="*" />
              </Grid.ColumnDefinitions>
              <Grid>
                <Grid.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform
                          Angle="180" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </Grid.LayoutTransform>
                <Rectangle
                  Margin="2,2,2,2"
                  x:Name="Rectangle"
                  Fill="{StaticResource NormalBrush}"
                  Stroke="{StaticResource NormalBorderBrush}"
                  StrokeThickness="1"
                  RadiusX="1"
                  RadiusY="1" />
                <Rectangle
                  Margin="2,2,2,2"
                  x:Name="ShineRectangle"
                  Fill="{StaticResource ShineBrush}"
                  Stroke="{StaticResource NormalBorderBrush}"
                  StrokeThickness="1"
                  RadiusX="1"
                  RadiusY="1" />
                <Rectangle
                  Margin="2,2,2,2"
                  x:Name="HoverRectangle"
                  Fill="{StaticResource HoverBrush}"
                  Stroke="{StaticResource NormalBorderBrush}"
                  StrokeThickness="1"
                  RadiusX="1"
                  RadiusY="1"
                  Opacity="0" />
                <Rectangle
                  Margin="2,2,2,2"
                  x:Name="HoverShineRectangle"
                  Fill="{StaticResource HoverShineBrush}"
                  Stroke="{StaticResource NormalBorderBrush}"
                  StrokeThickness="1"
                  RadiusX="1"
                  RadiusY="1"
                  Opacity="0" />
                <Rectangle
                  Margin="2,2,2,2"
                  x:Name="PressedRectangle"
                  Fill="{StaticResource PressedBrush}"
                  Stroke="{StaticResource PressedBorderBrush}"
                  StrokeThickness="1"
                  RadiusX="1"
                  RadiusY="1"
                  Opacity="0" />
                <Path
                  HorizontalAlignment="Center"
                  x:Name="Up_Arrow"
                  VerticalAlignment="Center"
                  Fill="{StaticResource GlyphBrush}"
                  Data="M 0 0 L 4 4 L 8 0 Z" />
                <Path
                  Visibility="Collapsed"
                  HorizontalAlignment="Center"
                  x:Name="Down_Arrow"
                  VerticalAlignment="Center"
                  Fill="{StaticResource GlyphBrush}"
                  Data="M 0 4 L 4 0 L 8 4 Z" />
              </Grid>
              <ContentPresenter
                SnapsToDevicePixels="True"
                HorizontalAlignment="Left"
                Margin="4,2,0,2"
                VerticalAlignment="Center"
                Grid.Column="1"
                RecognizesAccessKey="True" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsChecked"
              Value="true">
              <Setter
                Property="Visibility"
                TargetName="Up_Arrow"
                Value="Collapsed" />
              <Setter
                Property="Visibility"
                TargetName="Down_Arrow"
                Value="Visible" />
            </Trigger>
            <Trigger
              Property="IsMouseOver"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOff}"
                  x:Name="HoverOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger
              Property="IsPressed"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource PressedOff}"
                  x:Name="PressedOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource PressedOn}"
                  x:Name="PressedOn_BeginStoryboard" />
              </Trigger.EnterActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style
    x:Key="ExpanderLeftHeaderStyle"
    TargetType="{x:Type ToggleButton}">
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type ToggleButton}">
          <ControlTemplate.Resources>
            <Storyboard
              x:Key="HoverOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverShineRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="HoverOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverShineRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="PressedOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="PressedRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="PressedOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="PressedRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Border
            Padding="{TemplateBinding Padding}"
            CornerRadius="2,2,2,2"
            Background="{StaticResource NormalBrush}"
            BorderBrush="{StaticResource NormalBorderBrush}"
            BorderThickness="1,1,1,1">
            <Grid
              SnapsToDevicePixels="False"
              Background="Transparent">
              <Grid.RowDefinitions>
                <RowDefinition
                  Height="19" />
                <RowDefinition
                  Height="*" />
              </Grid.RowDefinitions>
              <Grid>
                <Grid.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform
                          Angle="90" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </Grid.LayoutTransform>
                <Rectangle
                  Margin="2,2,2,2"
                  x:Name="Rectangle"
                  Fill="{StaticResource NormalBrush}"
                  Stroke="{StaticResource NormalBorderBrush}"
                  StrokeThickness="1"
                  RadiusX="1"
                  RadiusY="1" />
                <Rectangle
                  Margin="2,2,2,2"
                  x:Name="ShineRectangle"
                  Fill="{StaticResource ShineBrush}"
                  Stroke="{StaticResource NormalBorderBrush}"
                  StrokeThickness="1"
                  RadiusX="1"
                  RadiusY="1" />
                <Rectangle
                  Margin="2,2,2,2"
                  x:Name="HoverRectangle"
                  Fill="{StaticResource HoverBrush}"
                  Stroke="{StaticResource NormalBorderBrush}"
                  StrokeThickness="1"
                  RadiusX="1"
                  RadiusY="1"
                  Opacity="0" />
                <Rectangle
                  Margin="2,2,2,2"
                  x:Name="HoverShineRectangle"
                  Fill="{StaticResource HoverShineBrush}"
                  Stroke="{StaticResource NormalBorderBrush}"
                  StrokeThickness="1"
                  RadiusX="1"
                  RadiusY="1"
                  Opacity="0" />
                <Rectangle
                  Margin="2,2,2,2"
                  x:Name="PressedRectangle"
                  Fill="{StaticResource PressedBrush}"
                  Stroke="{StaticResource PressedBorderBrush}"
                  StrokeThickness="1"
                  RadiusX="1"
                  RadiusY="1"
                  Opacity="0" />
                <Path
                  HorizontalAlignment="Center"
                  x:Name="Up_Arrow"
                  VerticalAlignment="Center"
                  Fill="{StaticResource GlyphBrush}"
                  Data="M 0 0 L 4 4 L 8 0 Z" />
                <Path
                  Visibility="Collapsed"
                  HorizontalAlignment="Center"
                  x:Name="Down_Arrow"
                  VerticalAlignment="Center"
                  Fill="{StaticResource GlyphBrush}"
                  Data="M 0 4 L 4 0 L 8 4 Z" />
              </Grid>
              <ContentPresenter
                SnapsToDevicePixels="True"
                HorizontalAlignment="Center"
                Margin="4,4,2,0"
                VerticalAlignment="Top"
                Grid.Row="1"
                RecognizesAccessKey="True">
                <ContentPresenter.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform
                          Angle="90" />
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </ContentPresenter.LayoutTransform>
              </ContentPresenter>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsChecked"
              Value="true">
              <Setter
                Property="Visibility"
                TargetName="Up_Arrow"
                Value="Collapsed" />
              <Setter
                Property="Visibility"
                TargetName="Down_Arrow"
                Value="Visible" />
            </Trigger>
            <Trigger
              Property="IsMouseOver"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOff}"
                  x:Name="HoverOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger
              Property="IsPressed"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource PressedOff}"
                  x:Name="PressedOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource PressedOn}"
                  x:Name="PressedOn_BeginStoryboard" />
              </Trigger.EnterActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style
    TargetType="{x:Type Expander}">
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Setter
      Property="Background"
      Value="Transparent" />
    <Setter
      Property="HorizontalContentAlignment"
      Value="Stretch" />
    <Setter
      Property="VerticalContentAlignment"
      Value="Stretch" />
    <Setter
      Property="BorderBrush"
      Value="Transparent" />
    <Setter
      Property="BorderThickness"
      Value="1" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type Expander}">
          <Border
            SnapsToDevicePixels="true"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="1,1,1,1"
            CornerRadius="3">
            <DockPanel
              x:Name="dockPanel">
              <ToggleButton
                FontFamily="{TemplateBinding FontFamily}"
                FontSize="{TemplateBinding FontSize}"
                FontStretch="{TemplateBinding FontStretch}"
                FontStyle="{TemplateBinding FontStyle}"
                FontWeight="{TemplateBinding FontWeight}"
                Foreground="{TemplateBinding Foreground}"
                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                Padding="{TemplateBinding Padding}"
                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                Margin="1,1,1,0"
                MinHeight="0"
                MinWidth="0"
                x:Name="HeaderSite"
                Style="{StaticResource ExpanderDownHeaderStyle}"
                Content="{TemplateBinding Header}"
                ContentTemplate="{TemplateBinding HeaderTemplate}"
                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                DockPanel.Dock="Top" />
              <Border
                Visibility="Collapsed"
                Background="{StaticResource ShadeBrush}"
                BorderBrush="{StaticResource NormalBorderBrush}"
                BorderThickness="1,0,1,1"
                CornerRadius="3,3,3,3"
                x:Name="border"
                Margin="1,1,1,1">
                <ContentPresenter
                  Focusable="false"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  Margin="1,1,1,1"
                  x:Name="ExpandSite"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                  DockPanel.Dock="Bottom" />
              </Border>
            </DockPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsExpanded"
              Value="true">
              <Setter
                Property="Visibility"
                TargetName="border"
                Value="Visible" />
            </Trigger>
            <Trigger
              Property="ExpandDirection"
              Value="Down" />
            <Trigger
              Property="ExpandDirection"
              Value="Right">
              <Setter
                Property="DockPanel.Dock"
                TargetName="ExpandSite"
                Value="Right" />
              <Setter
                Property="DockPanel.Dock"
                TargetName="HeaderSite"
                Value="Left" />
              <Setter
                Property="Style"
                TargetName="HeaderSite"
                Value="{StaticResource ExpanderRightHeaderStyle}" />
            </Trigger>
            <Trigger
              Property="ExpandDirection"
              Value="Up">
              <Setter
                Property="DockPanel.Dock"
                TargetName="ExpandSite"
                Value="Top" />
              <Setter
                Property="DockPanel.Dock"
                TargetName="HeaderSite"
                Value="Bottom" />
              <Setter
                Property="Style"
                TargetName="HeaderSite"
                Value="{StaticResource ExpanderUpHeaderStyle}" />
            </Trigger>
            <Trigger
              Property="ExpandDirection"
              Value="Left">
              <Setter
                Property="DockPanel.Dock"
                TargetName="ExpandSite"
                Value="Left" />
              <Setter
                Property="DockPanel.Dock"
                TargetName="HeaderSite"
                Value="Right" />
              <Setter
                Property="Style"
                TargetName="HeaderSite"
                Value="{StaticResource ExpanderLeftHeaderStyle}" />
            </Trigger>
            <Trigger
              Property="IsEnabled"
              Value="false">
              <Setter
                Property="Foreground"
                Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate
    x:Key="ComboBoxToggleButton"
    TargetType="{x:Type ToggleButton}">
    <ControlTemplate.Resources>
      <Storyboard
        x:Key="HoverOn">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="HoverBorder"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.1000000"
            Value="1" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="HoverShineBorder"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.1000000"
            Value="1" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="HoverOff">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="HoverShineBorder"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.3000000"
            Value="0" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="HoverBorder"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.3000000"
            Value="0" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
    </ControlTemplate.Resources>
    <Grid
      x:Name="grid">
      <Grid.ColumnDefinitions>
        <ColumnDefinition />
        <ColumnDefinition
          Width="20" />
      </Grid.ColumnDefinitions>
      <Rectangle
        Grid.ColumnSpan="2"
        HorizontalAlignment="Stretch"
        x:Name="Rectangle"
        VerticalAlignment="Stretch"
        Width="Auto"
        Height="Auto"
        RadiusX="3"
        RadiusY="3"
        Fill="{StaticResource LightBrush}"
        Stroke="{StaticResource NormalBorderBrush}" />
      <Rectangle
        Grid.Column="0"
        HorizontalAlignment="Stretch"
        VerticalAlignment="Stretch"
        Width="Auto"
        Height="Auto"
        RadiusX="3"
        RadiusY="3"
        Fill="{StaticResource LightBrush}"
        Margin="1" />
      <Border
        Margin="2,2,2,2"
        Grid.Column="1"
        Background="{StaticResource NormalBrush}"
        CornerRadius="3,3,3,3"
        x:Name="border" />
      <Border
        Margin="2,2,2,2"
        Background="{StaticResource HoverBrush}"
        CornerRadius="3,3,3,3"
        x:Name="HoverBorder"
        Grid.Column="1"
        Opacity="0" />
      <Border
        Margin="2,2,2,2"
        Background="{StaticResource HoverShineBrush}"
        CornerRadius="3,3,3,3"
        x:Name="HoverShineBorder"
        Grid.Column="1"
        Opacity="0" />
      <Path
        Grid.Column="1"
        HorizontalAlignment="Center"
        x:Name="Arrow"
        VerticalAlignment="Center"
        Fill="{x:Null}"
        Data="M0.5,0.5 L3,6.5 5.5,0.5"
        Stroke="{StaticResource GlyphBrush}"
        Margin="5,0,5,0"
        Height="7"
        StrokeThickness="2"
        Stretch="Fill" />
      <Border
        Margin="2,2,2,2"
        Background="{StaticResource ShineBrush}"
        CornerRadius="3,3,3,3"
        x:Name="ShineBorder"
        Grid.Column="1" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger
        Property="IsMouseOver"
        Value="true">
        <Trigger.ExitActions>
          <BeginStoryboard
            Storyboard="{StaticResource HoverOff}"
            x:Name="HoverOff_BeginStoryboard" />
        </Trigger.ExitActions>
        <Trigger.EnterActions>
          <BeginStoryboard
            Storyboard="{StaticResource HoverOn}" />
        </Trigger.EnterActions>
      </Trigger>
      <Trigger
        Property="IsChecked"
        Value="true" />
      <Trigger
        Property="IsEnabled"
        Value="False">
        <Setter
          Property="Foreground"
          Value="{StaticResource DisabledForegroundBrush}" />
        <Setter
          Property="Stroke"
          TargetName="Arrow"
          Value="{StaticResource DisabledForegroundBrush}" />
        <Setter
          Property="Background"
          TargetName="border"
          Value="{StaticResource DisabledBorderBrush}" />
        <Setter
          Property="Opacity"
          TargetName="grid"
          Value="0.8" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate
    x:Key="ComboBoxTextBox"
    TargetType="{x:Type TextBox}">
    <Border
      x:Name="PART_ContentHost"
      Focusable="False"
      Background="{TemplateBinding Background}" />
    <ControlTemplate.Triggers />
  </ControlTemplate>
  <ControlTemplate
    x:Key="ComboBoxTemplate"
    TargetType="{x:Type ComboBox}">
    <Grid
      x:Name="grid">
      <ToggleButton
        Grid.Column="2"
        Template="{StaticResource ComboBoxToggleButton}"
        x:Name="ToggleButton"
        Focusable="false"
        IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
        ClickMode="Press" />
      <ContentPresenter
        HorizontalAlignment="Left"
        Margin="6,3,23,3"
        x:Name="ContentSite"
        VerticalAlignment="Center"
        Content="{TemplateBinding SelectionBoxItem}"
        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
        IsHitTestVisible="False" />
      <TextBox
        Visibility="Hidden"
        Template="{StaticResource ComboBoxTextBox}"
        HorizontalAlignment="Left"
        Margin="3,3,23,3"
        x:Name="PART_EditableTextBox"
        Style="{x:Null}"
        VerticalAlignment="Center"
        Focusable="True"
        Background="{StaticResource LightBrush}"
        IsReadOnly="{TemplateBinding IsReadOnly}" />
      <Popup
        IsOpen="{TemplateBinding IsDropDownOpen}"
        Placement="Bottom"
        x:Name="Popup"
        Focusable="False"
        AllowsTransparency="True"
        PopupAnimation="Slide">
        <Grid
          MaxHeight="{TemplateBinding MaxDropDownHeight}"
          MinWidth="{TemplateBinding ActualWidth}"
          x:Name="DropDown"
          SnapsToDevicePixels="True">
          <Border
            x:Name="DropDownBorder"
            Background="{StaticResource ControlBackgroundBrush}"
            CornerRadius="3,3,3,3"
            BorderBrush="{StaticResource NormalBrush}"
            BorderThickness="1"
            Padding="1,2,1,1" />
          <ScrollViewer
            Margin="1,2,1,1"
            SnapsToDevicePixels="True"
            HorizontalScrollBarVisibility="Auto"
            VerticalScrollBarVisibility="Auto"
            CanContentScroll="True"
            Foreground="{StaticResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}">
            <StackPanel
              IsItemsHost="True"
              KeyboardNavigation.DirectionalNavigation="Contained" />
          </ScrollViewer>
        </Grid>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger
        Property="HasItems"
        Value="false">
        <Setter
          Property="MinHeight"
          Value="95"
          TargetName="DropDownBorder" />
      </Trigger>
      <Trigger
        Property="IsEnabled"
        Value="false">
        <Setter
          Property="Foreground"
          Value="{StaticResource DisabledForegroundBrush}" />
        <Setter
          Property="Opacity"
          TargetName="grid"
          Value="0.5" />
      </Trigger>
      <Trigger
        Property="IsGrouping"
        Value="true">
        <Setter
          Property="ScrollViewer.CanContentScroll"
          Value="false" />
      </Trigger>
      <Trigger
        Property="AllowsTransparency"
        SourceName="Popup"
        Value="true">
        <Setter
          Property="Margin"
          Value="0,2,0,0"
          TargetName="DropDownBorder" />
      </Trigger>
      <Trigger
        Property="IsEditable"
        Value="true">
        <Setter
          Property="IsTabStop"
          Value="false" />
        <Setter
          Property="Visibility"
          Value="Visible"
          TargetName="PART_EditableTextBox" />
        <Setter
          Property="Visibility"
          Value="Hidden"
          TargetName="ContentSite" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style
    TargetType="{x:Type ComboBox}">
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Setter
      Property="SnapsToDevicePixels"
      Value="true" />
    <Setter
      Property="Template"
      Value="{StaticResource ComboBoxTemplate}" />
  </Style>
  <Style
    TargetType="{x:Type ComboBoxItem}">
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Setter
      Property="SnapsToDevicePixels"
      Value="true" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type ComboBoxItem}">
          <ControlTemplate.Resources>
            <Storyboard
              x:Key="HoverOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="HoverOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.4000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="SelectedOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="SelectedRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="SelectedOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="SelectedRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.4000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid
            SnapsToDevicePixels="true"
            Margin="1,1,1,1">
            <Rectangle
              x:Name="Background"
              IsHitTestVisible="False"
              Opacity="0.25"
              Fill="{StaticResource NormalBrush}"
              RadiusX="2"
              RadiusY="2" />
            <Rectangle
              x:Name="HoverRectangle"
              IsHitTestVisible="False"
              Opacity="0"
              Fill="{StaticResource NormalBrush}"
              RadiusX="2"
              RadiusY="2" />
            <Rectangle
              x:Name="SelectedRectangle"
              IsHitTestVisible="False"
              Opacity="0"
              Fill="{StaticResource SelectedBackgroundBrush}"
              RadiusX="2"
              RadiusY="2" />
            <ContentPresenter
              Margin="5,2,0,2"
              x:Name="contentPresenter"
              VerticalAlignment="Center" />
            <Rectangle
              x:Name="FocusVisualElement"
              Visibility="Collapsed"
              Stroke="{StaticResource HoverShineBrush}"
              StrokeThickness="1"
              RadiusX="2"
              RadiusY="2" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsHighlighted"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource SelectedOff}"
                  x:Name="SelectedOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource SelectedOn}"
                  x:Name="SelectedOn_BeginStoryboard" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger
              Property="IsMouseOver"
              Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOff}"
                  x:Name="HoverOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger
              Property="IsEnabled"
              Value="false">
              <Setter
                Property="Foreground"
                Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate
    x:Key="TextBoxTemplate"
    TargetType="{x:Type TextBox}">
    <ControlTemplate.Resources>
      <Storyboard
        x:Key="HoverOn">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="HoverBorder"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.1000000"
            Value="0.5" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="HoverOff">
        <DoubleAnimationUsingKeyFrames
          BeginTime="00:00:00"
          Storyboard.TargetName="HoverBorder"
          Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.4000000"
            Value="0" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="FocusedOn">
        <DoubleAnimationUsingKeyFrames
          Storyboard.TargetName="FocusVisualElement"
          Storyboard.TargetProperty="Opacity">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.1000000"
            Value="1" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard
        x:Key="FocusedOff">
        <DoubleAnimationUsingKeyFrames
          Storyboard.TargetName="FocusVisualElement"
          Storyboard.TargetProperty="Opacity">
          <SplineDoubleKeyFrame
            KeyTime="00:00:00.4000000"
            Value="0" />
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
    </ControlTemplate.Resources>
    <Grid>
      <Border
        x:Name="Border"
        Opacity="1"
        BorderBrush="{TemplateBinding BorderBrush}"
        BorderThickness="{TemplateBinding BorderThickness}"
        CornerRadius="2,2,2,2"
        Background="{TemplateBinding Background}">
        <Grid>
          <Border>
            <ScrollViewer
              Margin="0"
              x:Name="PART_ContentHost"
              HorizontalAlignment="Stretch"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              Cursor="IBeam" />
          </Border>
        </Grid>
      </Border>
      <Border
        x:Name="HoverBorder"
        IsHitTestVisible="False"
        Opacity="0"
        BorderBrush="{StaticResource GlyphBrush}"
        BorderThickness="{TemplateBinding BorderThickness}"
        CornerRadius="2,2,2,2" />
      <Border
        x:Name="FocusVisualElement"
        IsHitTestVisible="False"
        Opacity="0"
        BorderBrush="{StaticResource HoverShineBrush}"
        BorderThickness="{TemplateBinding BorderThickness}"
        CornerRadius="2,2,2,2" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger
        Property="IsFocused"
        Value="True">
        <Trigger.ExitActions>
          <BeginStoryboard
            Storyboard="{StaticResource FocusedOff}"
            x:Name="FocusedOff_BeginStoryboard" />
        </Trigger.ExitActions>
        <Trigger.EnterActions>
          <BeginStoryboard
            Storyboard="{StaticResource FocusedOn}"
            x:Name="FocusedOn_BeginStoryboard" />
        </Trigger.EnterActions>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.ExitActions>
          <BeginStoryboard
            Storyboard="{StaticResource HoverOff}"
            x:Name="HoverOff_BeginStoryboard" />
        </MultiTrigger.ExitActions>
        <MultiTrigger.EnterActions>
          <BeginStoryboard
            Storyboard="{StaticResource HoverOn}" />
        </MultiTrigger.EnterActions>
        <MultiTrigger.Conditions>
          <Condition
            Property="IsMouseOver"
            Value="True" />
          <Condition
            Property="IsFocused"
            Value="False" />
        </MultiTrigger.Conditions>
      </MultiTrigger>
      <Trigger
        Property="IsEnabled"
        Value="False">
        <Setter
          Property="Background"
          TargetName="Border"
          Value="{StaticResource DisabledBackgroundBrush}" />
        <Setter
          Property="BorderBrush"
          TargetName="Border"
          Value="{StaticResource DisabledBorderBrush}" />
        <Setter
          Property="Foreground"
          Value="{StaticResource DisabledForegroundBrush}" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style
    TargetType="{x:Type TextBox}">
    <Setter
      Property="KeyboardNavigation.TabNavigation"
      Value="None" />
    <Setter
      Property="FocusVisualStyle"
      Value="{x:Null}" />
    <Setter
      Property="AllowDrop"
      Value="true" />
    <Setter
      Property="Template"
      Value="{StaticResource TextBoxTemplate}" />
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Setter
      Property="Background"
      Value="{StaticResource ControlBackgroundBrush}" />
    <Setter
      Property="BorderBrush"
      Value="{StaticResource WindowBorderBrush}" />
    <Setter
      Property="BorderThickness"
      Value="1" />
  </Style>
  <Style
    x:Key="NUD_TextBox"
    TargetType="{x:Type TextBox}">
    <Setter
      Property="KeyboardNavigation.TabNavigation"
      Value="None" />
    <Setter
      Property="FocusVisualStyle"
      Value="{x:Null}" />
    <Setter
      Property="AllowDrop"
      Value="true" />
    <Setter
      Property="Foreground"
      Value="{DynamicResource TextBrush}" />
    <Setter
      Property="Background"
      Value="{DynamicResource ControlBackgroundBrush}" />
    <Setter
      Property="BorderBrush"
      Value="{DynamicResource WindowBorderBrush}" />
    <Setter
      Property="BorderThickness"
      Value="1" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Border
            Margin="{TemplateBinding Margin}"
            x:Name="Border"
            Opacity="1"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="2,2,2,2"
            Background="{TemplateBinding Background}">
            <ScrollViewer
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              x:Name="PART_ContentHost" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsEnabled"
              Value="False">
              <Setter
                Property="Background"
                TargetName="Border"
                Value="{StaticResource DisabledBackgroundBrush}" />
              <Setter
                Property="BorderBrush"
                TargetName="Border"
                Value="{StaticResource DisabledBorderBrush}" />
              <Setter
                Property="Foreground"
                Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style
    TargetType="{x:Type PasswordBox}">
    <Setter
      Property="KeyboardNavigation.TabNavigation"
      Value="None" />
    <Setter
      Property="FocusVisualStyle"
      Value="{x:Null}" />
    <Setter
      Property="AllowDrop"
      Value="true" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type PasswordBox}">
          <ControlTemplate.Resources>
            <Storyboard
              x:Key="HoverOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="0.5" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="HoverOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.4000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="FocusedOn">
              <DoubleAnimationUsingKeyFrames
                Storyboard.TargetName="FocusVisualElement"
                Storyboard.TargetProperty="Opacity">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="FocusedOff">
              <DoubleAnimationUsingKeyFrames
                Storyboard.TargetName="FocusVisualElement"
                Storyboard.TargetProperty="Opacity">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.4000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid>
            <Border
              x:Name="Border"
              Opacity="1"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="2,2,2,2"
              Background="{TemplateBinding Background}">
              <Grid>
                <Border
                  BorderThickness="1">
                  <ScrollViewer
                    Margin="0"
                    x:Name="PART_ContentHost" />
                </Border>
              </Grid>
            </Border>
            <Border
              x:Name="HoverBorder"
              IsHitTestVisible="False"
              Opacity="0"
              BorderBrush="{StaticResource GlyphBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="2,2,2,2" />
            <Border
              x:Name="FocusVisualElement"
              IsHitTestVisible="False"
              Opacity="0"
              BorderBrush="{StaticResource HoverShineBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="2,2,2,2" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsFocused"
              Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource FocusedOff}"
                  x:Name="FocusedOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource FocusedOn}"
                  x:Name="FocusedOn_BeginStoryboard" />
              </Trigger.EnterActions>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOff}"
                  x:Name="HoverOff_BeginStoryboard" />
              </MultiTrigger.ExitActions>
              <MultiTrigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOn}" />
              </MultiTrigger.EnterActions>
              <MultiTrigger.Conditions>
                <Condition
                  Property="IsMouseOver"
                  Value="True" />
                <Condition
                  Property="IsFocused"
                  Value="False" />
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger
              Property="IsEnabled"
              Value="False">
              <Setter
                Property="Background"
                TargetName="Border"
                Value="{StaticResource DisabledBackgroundBrush}" />
              <Setter
                Property="BorderBrush"
                TargetName="Border"
                Value="{StaticResource DisabledBorderBrush}" />
              <Setter
                Property="Foreground"
                Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Setter
      Property="Background"
      Value="{StaticResource ControlBackgroundBrush}" />
    <Setter
      Property="BorderBrush"
      Value="#FF000000" />
  </Style>
  <Style
    TargetType="{x:Type RichTextBox}">
    <Setter
      Property="KeyboardNavigation.TabNavigation"
      Value="None" />
    <Setter
      Property="FocusVisualStyle"
      Value="{x:Null}" />
    <Setter
      Property="AllowDrop"
      Value="true" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type RichTextBox}">
          <ControlTemplate.Resources>
            <Storyboard
              x:Key="HoverOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="0.5" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="HoverOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.4000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="FocusedOn">
              <DoubleAnimationUsingKeyFrames
                Storyboard.TargetName="FocusVisualElement"
                Storyboard.TargetProperty="Opacity">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="FocusedOff">
              <DoubleAnimationUsingKeyFrames
                Storyboard.TargetName="FocusVisualElement"
                Storyboard.TargetProperty="Opacity">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.4000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid>
            <Border
              x:Name="Border"
              Opacity="1"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="2,2,2,2"
              Background="{TemplateBinding Background}">
              <Grid>
                <Border
                  BorderThickness="1">
                  <ScrollViewer
                    Margin="0"
                    x:Name="PART_ContentHost" />
                </Border>
              </Grid>
            </Border>
            <Border
              x:Name="HoverBorder"
              IsHitTestVisible="False"
              Opacity="0"
              BorderBrush="{StaticResource GlyphBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="2,2,2,2" />
            <Border
              x:Name="FocusVisualElement"
              IsHitTestVisible="False"
              Opacity="0"
              BorderBrush="{StaticResource HoverShineBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="2,2,2,2" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsFocused"
              Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource FocusedOff}"
                  x:Name="FocusedOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource FocusedOn}"
                  x:Name="FocusedOn_BeginStoryboard" />
              </Trigger.EnterActions>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOff}"
                  x:Name="HoverOff_BeginStoryboard" />
              </MultiTrigger.ExitActions>
              <MultiTrigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOn}" />
              </MultiTrigger.EnterActions>
              <MultiTrigger.Conditions>
                <Condition
                  Property="IsMouseOver"
                  Value="True" />
                <Condition
                  Property="IsFocused"
                  Value="False" />
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger
              Property="IsEnabled"
              Value="False">
              <Setter
                Property="Background"
                TargetName="Border"
                Value="{StaticResource DisabledBackgroundBrush}" />
              <Setter
                Property="BorderBrush"
                TargetName="Border"
                Value="{StaticResource DisabledBorderBrush}" />
              <Setter
                Property="Foreground"
                Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Setter
      Property="Background"
      Value="{StaticResource ControlBackgroundBrush}" />
    <Setter
      Property="BorderBrush"
      Value="#FF000000" />
  </Style>
  <Style
    TargetType="{x:Type Label}">
    <Setter
      Property="HorizontalContentAlignment"
      Value="Left" />
    <Setter
      Property="VerticalContentAlignment"
      Value="Top" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type Label}">
          <Grid>
            <ContentPresenter
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              RecognizesAccessKey="True" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsEnabled"
              Value="false" />
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
  </Style>
  <Style
    TargetType="{x:Type Menu}">
    <Setter
      Property="Background"
      Value="{StaticResource ControlBackgroundBrush}" />
    <Setter
      Property="BorderBrush"
      Value="{StaticResource NormalBorderBrush}" />
    <Setter
      Property="SnapsToDevicePixels"
      Value="True" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type Menu}">
          <Grid>
            <Border
              Margin="1"
              x:Name="Border"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}" />
            <StackPanel
              Background="{TemplateBinding Background}"
              IsItemsHost="True"
              ClipToBounds="True"
              Orientation="Horizontal" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsEnabled"
              Value="False">
              <Setter
                Property="Background"
                Value="{StaticResource DisabledBackgroundBrush}"
                TargetName="Border" />
              <Setter
                Property="BorderBrush"
                Value="{StaticResource DisabledBorderBrush}"
                TargetName="Border" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <DropShadowBitmapEffect
    x:Key="PopupDropShadow"
    ShadowDepth="1.5"
    Softness="0.15" />
  <Style
    TargetType="{x:Type MenuItem}">
    <Setter
      Property="HorizontalContentAlignment"
      Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter
      Property="VerticalContentAlignment"
      Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter
      Property="Background"
      Value="Transparent" />
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type MenuItem}">
          <ControlTemplate.Resources>
            <Storyboard
              x:Key="HighlightedOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverShineBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="HightlightedOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverShineBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Border
            x:Name="Border"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="0,0,0,0"
            Margin="3,1">
            <Grid
              Margin="0,0,0,0">
              <Grid.ColumnDefinitions>
                <ColumnDefinition
                  MinWidth="17"
                  Width="Auto"
                  SharedSizeGroup="MenuItemIconColumnGroup" />
                <ColumnDefinition
                  Width="*" />
                <ColumnDefinition
                  Width="Auto"
                  SharedSizeGroup="MenuItemIGTColumnGroup" />
                <ColumnDefinition
                  Width="14" />
              </Grid.ColumnDefinitions>
              <Border
                Grid.Column="0"
                Grid.ColumnSpan="4"
                Background="{StaticResource NormalBrush}"
                Opacity="0"
                x:Name="HoverBorder"
                CornerRadius="1,1,1,1" />
              <Border
                Grid.ColumnSpan="4"
                Background="{StaticResource HoverShineBrush}"
                Opacity="0"
                x:Name="HoverShineBorder"
                CornerRadius="1,1,1,1" />
              <ContentPresenter
                Margin="4,0,6,0"
                x:Name="Icon"
                VerticalAlignment="Center"
                ContentSource="Icon" />
              <Grid
                Visibility="Hidden"
                Margin="4,0,6,0"
                x:Name="GlyphPanel"
                VerticalAlignment="Center">
                <Path
                  x:Name="GlyphPanelpath"
                  VerticalAlignment="Center"
                  Fill="{TemplateBinding Foreground}"
                  Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z"
                  FlowDirection="LeftToRight" />
              </Grid>
              <ContentPresenter
                Grid.Column="1"
                x:Name="HeaderHost"
                RecognizesAccessKey="True"
                ContentSource="Header"
                Margin="2,2"
                VerticalAlignment="Center" />
              <Grid
                Grid.Column="3"
                Margin="4,0,6,0"
                x:Name="ArrowPanel"
                VerticalAlignment="Center">
                <Path
                  x:Name="ArrowPanelPath"
                  VerticalAlignment="Center"
                  Fill="{TemplateBinding Foreground}"
                  Data="M0,0 L0,8 L4,4 z" />
              </Grid>
              <Popup
                IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                Placement="Right"
                x:Name="SubMenuPopup"
                Focusable="false"
                AllowsTransparency="true"
                PopupAnimation="{StaticResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                <Grid
                  x:Name="SubMenu">
                  <Border
                    x:Name="SubMenuBorder"
                    Background="{StaticResource LightBrush}"
                    BorderBrush="{StaticResource NormalBrush}"
                    BorderThickness="1"
                    Opacity="0.8" />
                  <StackPanel
                    IsItemsHost="True"
                    KeyboardNavigation.DirectionalNavigation="Cycle"
                    Margin="0,2" />
                </Grid>
              </Popup>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger
              Property="Role"
              Value="TopLevelHeader">
              <Setter
                Property="Margin"
                Value="0,1,0,1" />
              <Setter
                Property="Padding"
                Value="6,3,6,3" />
              <Setter
                Property="Grid.IsSharedSizeScope"
                Value="true" />
              <Setter
                Property="Placement"
                Value="Bottom"
                TargetName="SubMenuPopup" />
              <Setter
                Property="Visibility"
                Value="Collapsed"
                TargetName="ArrowPanel" />
            </Trigger>
            <Trigger
              Property="Role"
              Value="TopLevelItem">
              <Setter
                Property="Margin"
                Value="0,1,0,1" />
              <Setter
                Property="Padding"
                Value="6,3,6,3" />
              <Setter
                Property="Visibility"
                Value="Collapsed"
                TargetName="ArrowPanel" />
            </Trigger>
            <Trigger
              Property="Role"
              Value="SubmenuHeader">
              <Setter
                Property="DockPanel.Dock"
                Value="Top" />
              <Setter
                Property="Padding"
                Value="0,2,0,2" />
              <Setter
                Property="Grid.IsSharedSizeScope"
                Value="true" />
            </Trigger>
            <Trigger
              Property="Role"
              Value="SubmenuItem">
              <Setter
                Property="DockPanel.Dock"
                Value="Top" />
              <Setter
                Property="Padding"
                Value="0,2,0,2" />
              <Setter
                Property="Visibility"
                Value="Collapsed"
                TargetName="ArrowPanel" />
            </Trigger>
            <Trigger
              Property="IsSuspendingPopupAnimation"
              Value="true">
              <Setter
                Property="PopupAnimation"
                Value="None"
                TargetName="SubMenuPopup" />
            </Trigger>
            <Trigger
              Property="Icon"
              Value="{x:Null}">
              <Setter
                Property="Visibility"
                Value="Collapsed"
                TargetName="Icon" />
            </Trigger>
            <Trigger
              Property="IsChecked"
              Value="true">
              <Setter
                Property="Visibility"
                Value="Visible"
                TargetName="GlyphPanel" />
              <Setter
                Property="Visibility"
                Value="Collapsed"
                TargetName="Icon" />
            </Trigger>
            <Trigger
              Property="AllowsTransparency"
              SourceName="SubMenuPopup"
              Value="true">
              <Setter
                Property="Margin"
                Value="0,0,3,3"
                TargetName="SubMenu" />
              <Setter
                Property="SnapsToDevicePixels"
                Value="true"
                TargetName="SubMenu" />
              <Setter
                Property="BitmapEffect"
                Value="{StaticResource PopupDropShadow}"
                TargetName="SubMenuBorder" />
            </Trigger>
            <Trigger
              Property="IsHighlighted"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HightlightedOff}"
                  x:Name="HightlightedOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HighlightedOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger
              Property="IsEnabled"
              Value="false">
              <Setter
                Property="Foreground"
                Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style
    x:Key="{x:Static MenuItem.SeparatorStyleKey}"
    TargetType="{x:Type Separator}"
    BasedOn="{x:Null}">
    <Setter
      Property="Height"
      Value="1" />
    <Setter
      Property="Margin"
      Value="0,1" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type Separator}">
          <Rectangle
            Height="{TemplateBinding Height}"
            Fill="{StaticResource NormalBrush}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style
    TargetType="{x:Type TabControl}">
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type TabControl}">
          <Grid
            ClipToBounds="true"
            SnapsToDevicePixels="true"
            KeyboardNavigation.TabNavigation="Local">
            <Grid.ColumnDefinitions>
              <ColumnDefinition
                x:Name="ColumnDefinition0" />
              <ColumnDefinition
                x:Name="ColumnDefinition1"
                Width="0" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition
                Height="Auto"
                x:Name="RowDefinition0" />
              <RowDefinition
                Height="*"
                x:Name="RowDefinition1" />
            </Grid.RowDefinitions>
            <Border
              CornerRadius="2,2,0,0"
              Background="Transparent"
              x:Name="border">
              <TabPanel
                x:Name="HeaderPanel"
                IsItemsHost="true"
                Panel.ZIndex="1"
                KeyboardNavigation.TabIndex="1"
                RenderTransformOrigin="0.5,0.5"
                Width="Auto"
                Height="Auto">
                <TabPanel.LayoutTransform>
                  <TransformGroup>
                    <ScaleTransform
                      ScaleX="1"
                      ScaleY="1" />
                    <SkewTransform
                      AngleX="0"
                      AngleY="0" />
                    <RotateTransform
                      Angle="0" />
                    <TranslateTransform
                      X="0"
                      Y="0" />
                  </TransformGroup>
                </TabPanel.LayoutTransform>
                <TabPanel.RenderTransform>
                  <TransformGroup>
                    <ScaleTransform
                      ScaleX="1"
                      ScaleY="1" />
                    <SkewTransform
                      AngleX="0"
                      AngleY="0" />
                    <RotateTransform />
                    <TranslateTransform
                      X="0"
                      Y="0" />
                  </TransformGroup>
                </TabPanel.RenderTransform>
              </TabPanel>
            </Border>
            <Border
              Background="{StaticResource LightBrush}"
              x:Name="ContentPanel"
              Grid.Column="0"
              Grid.Row="1"
              KeyboardNavigation.DirectionalNavigation="Contained"
              KeyboardNavigation.TabIndex="2"
              KeyboardNavigation.TabNavigation="Local"
              CornerRadius="0,0,2,2">
              <ContentPresenter
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                x:Name="PART_SelectedContentHost"
                ContentSource="SelectedContent" />
            </Border>
            <Border
              BorderBrush="{StaticResource NormalBrush}"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              Width="Auto"
              Height="Auto"
              BorderThickness="0,0,0,1"
              CornerRadius="10,0,0,0"
              Opacity="0.5"
              Margin="2,0,2,0"
              x:Name="border1">
              <Border.LayoutTransform>
                <TransformGroup>
                  <ScaleTransform
                    ScaleX="1"
                    ScaleY="1" />
                  <SkewTransform
                    AngleX="0"
                    AngleY="0" />
                  <RotateTransform
                    Angle="0" />
                  <TranslateTransform
                    X="0"
                    Y="0" />
                </TransformGroup>
              </Border.LayoutTransform>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger
              Property="TabStripPlacement"
              Value="Bottom">
              <Setter
                Property="Grid.Row"
                TargetName="ContentPanel"
                Value="0" />
              <Setter
                Property="Height"
                TargetName="RowDefinition0"
                Value="*" />
              <Setter
                Property="Height"
                TargetName="RowDefinition1"
                Value="Auto" />
              <Setter
                Property="Grid.Row"
                TargetName="border"
                Value="1" />
              <Setter
                Property="CornerRadius"
                TargetName="ContentPanel"
                Value="2,2,0,0" />
              <Setter
                Property="CornerRadius"
                TargetName="border"
                Value="0,0,2,2" />
            </Trigger>
            <Trigger
              Property="TabStripPlacement"
              Value="Left">
              <Setter
                Property="Grid.Row"
                TargetName="HeaderPanel"
                Value="0" />
              <Setter
                Property="Grid.Row"
                TargetName="ContentPanel"
                Value="0" />
              <Setter
                Property="Grid.Column"
                TargetName="ContentPanel"
                Value="1" />
              <Setter
                Property="Width"
                TargetName="ColumnDefinition0"
                Value="Auto" />
              <Setter
                Property="Width"
                TargetName="ColumnDefinition1"
                Value="*" />
              <Setter
                Property="Height"
                TargetName="RowDefinition0"
                Value="*" />
              <Setter
                Property="Height"
                TargetName="RowDefinition1"
                Value="0" />
              <Setter
                Property="Grid.Column"
                TargetName="border"
                Value="0" />
              <Setter
                Property="Margin"
                TargetName="border"
                Value="0,0,0,0" />
              <Setter
                Property="Margin"
                TargetName="ContentPanel"
                Value="0,0,0,0" />
              <Setter
                Property="LayoutTransform"
                TargetName="border1">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform
                      ScaleX="1"
                      ScaleY="1" />
                    <SkewTransform
                      AngleX="0"
                      AngleY="0" />
                    <RotateTransform
                      Angle="-90" />
                    <TranslateTransform
                      X="0"
                      Y="0" />
                  </TransformGroup>
                </Setter.Value>
              </Setter>
              <Setter
                Property="Margin"
                TargetName="border1"
                Value="0,0,0,0" />
              <Setter
                Property="CornerRadius"
                TargetName="border"
                Value="0,2,2,0" />
              <Setter
                Property="CornerRadius"
                TargetName="ContentPanel"
                Value="0,2,2,0" />
            </Trigger>
            <Trigger
              Property="TabStripPlacement"
              Value="Right">
              <Setter
                Property="Grid.Row"
                TargetName="HeaderPanel"
                Value="0" />
              <Setter
                Property="Grid.Row"
                TargetName="ContentPanel"
                Value="0" />
              <Setter
                Property="Grid.Column"
                TargetName="ContentPanel"
                Value="0" />
              <Setter
                Property="Width"
                TargetName="ColumnDefinition0"
                Value="*" />
              <Setter
                Property="Width"
                TargetName="ColumnDefinition1"
                Value="Auto" />
              <Setter
                Property="Height"
                TargetName="RowDefinition0"
                Value="*" />
              <Setter
                Property="Height"
                TargetName="RowDefinition1"
                Value="0" />
              <Setter
                Property="Grid.Column"
                TargetName="border"
                Value="1" />
              <Setter
                Property="LayoutTransform"
                TargetName="border1">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform
                      ScaleX="1"
                      ScaleY="1" />
                    <SkewTransform
                      AngleX="0"
                      AngleY="0" />
                    <RotateTransform
                      Angle="90" />
                    <TranslateTransform
                      X="0"
                      Y="0" />
                  </TransformGroup>
                </Setter.Value>
              </Setter>
              <Setter
                Property="Grid.Column"
                TargetName="border1"
                Value="1" />
              <Setter
                Property="CornerRadius"
                TargetName="ContentPanel"
                Value="2,0,0,2" />
              <Setter
                Property="CornerRadius"
                TargetName="border"
                Value="0,2,2,0" />
            </Trigger>
            <Trigger
              Property="IsEnabled"
              Value="false">
              <Setter
                Property="Foreground"
                Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style
    TargetType="{x:Type TabItem}">
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type TabItem}">
          <ControlTemplate.Resources>
            <Storyboard
              x:Key="HoverOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="HoverOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="SelectedOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="SelectedBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="SelectedOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="SelectedBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid
            x:Name="grid"
            Margin="2,1,2,0">
            <Grid.LayoutTransform>
              <TransformGroup>
                <ScaleTransform
                  ScaleX="1"
                  ScaleY="1" />
                <SkewTransform
                  AngleX="0"
                  AngleY="0" />
                <RotateTransform
                  Angle="0" />
                <TranslateTransform
                  X="0"
                  Y="0" />
              </TransformGroup>
            </Grid.LayoutTransform>
            <Border
              x:Name="border"
              BorderBrush="{x:Null}"
              CornerRadius="2,2,0,0"
              Opacity="0.5">
              <Border.Background>
                <LinearGradientBrush
                  EndPoint="0.5,0.976"
                  StartPoint="0.5,0.039">
                  <GradientStop
                    Color="#7FFFFFFF"
                    Offset="0" />
                  <GradientStop
                    Color="#19FFFFFF"
                    Offset="1" />
                </LinearGradientBrush>
              </Border.Background>
            </Border>
            <Border
              x:Name="SelectedBorder"
              BorderBrush="{x:Null}"
              CornerRadius="2,2,0,0"
              Opacity="0">
              <Border.Background>
                <LinearGradientBrush
                  EndPoint="0.5,0.976"
                  StartPoint="0.5,0.039">
                  <GradientStop
                    Color="{StaticResource HoverColor}"
                    Offset="0" />
                  <GradientStop
                    Color="{StaticResource MainColor}"
                    Offset="0.49" />
                  <GradientStop
                    Color="{StaticResource BorderColor}"
                    Offset="0.98" />
                </LinearGradientBrush>
              </Border.Background>
            </Border>
            <Border
              x:Name="HoverBorder"
              BorderBrush="{x:Null}"
              CornerRadius="2,2,0,0"
              Opacity="0">
              <Border.Background>
                <LinearGradientBrush
                  EndPoint="0.5,0.976"
                  StartPoint="0.5,0.039">
                  <GradientStop
                    Color="#7F595959"
                    Offset="0" />
                  <GradientStop
                    Color="#19FFFFFF"
                    Offset="1" />
                </LinearGradientBrush>
              </Border.Background>
            </Border>
            <Grid>
              <ContentPresenter
                x:Name="ContentSite"
                RecognizesAccessKey="True"
                ContentSource="Header"
                HorizontalAlignment="Center"
                Margin="6,1,6,1"
                VerticalAlignment="Center" />
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger
              Property="TabStripPlacement"
              Value="Left">
              <Setter
                Property="LayoutTransform"
                TargetName="grid">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform
                      ScaleX="1"
                      ScaleY="1" />
                    <SkewTransform
                      AngleX="0"
                      AngleY="0" />
                    <RotateTransform
                      Angle="-90" />
                    <TranslateTransform
                      X="0"
                      Y="0" />
                  </TransformGroup>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger
              Property="TabStripPlacement"
              Value="Right">
              <Setter
                Property="LayoutTransform"
                TargetName="grid">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform
                      ScaleX="1"
                      ScaleY="1" />
                    <SkewTransform
                      AngleX="0"
                      AngleY="0" />
                    <RotateTransform
                      Angle="90" />
                    <TranslateTransform
                      X="0"
                      Y="0" />
                  </TransformGroup>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger
              Property="TabStripPlacement"
              Value="Bottom">
              <Setter
                Property="LayoutTransform"
                TargetName="ContentSite">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform
                      ScaleX="1"
                      ScaleY="1" />
                    <SkewTransform
                      AngleX="0"
                      AngleY="0" />
                    <RotateTransform
                      Angle="180" />
                    <TranslateTransform
                      X="0"
                      Y="0" />
                  </TransformGroup>
                </Setter.Value>
              </Setter>
              <Setter
                Property="LayoutTransform"
                TargetName="grid">
                <Setter.Value>
                  <TransformGroup>
                    <ScaleTransform
                      ScaleX="1"
                      ScaleY="1" />
                    <SkewTransform
                      AngleX="0"
                      AngleY="0" />
                    <RotateTransform
                      Angle="180" />
                    <TranslateTransform
                      X="0"
                      Y="0" />
                  </TransformGroup>
                </Setter.Value>
              </Setter>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOff}"
                  x:Name="HoverOff_BeginStoryboard" />
              </MultiTrigger.ExitActions>
              <MultiTrigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOn}" />
              </MultiTrigger.EnterActions>
              <MultiTrigger.Conditions>
                <Condition
                  Property="IsMouseOver"
                  Value="True" />
                <Condition
                  Property="Selector.IsSelected"
                  Value="False" />
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger
              Property="IsSelected"
              Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource SelectedOff}"
                  x:Name="SelectedOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource SelectedOn}"
                  x:Name="SelectedOn_BeginStoryboard" />
              </Trigger.EnterActions>
              <Setter
                Property="Panel.ZIndex"
                Value="100" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition
                  Property="IsMouseOver"
                  Value="True"
                  SourceName="grid" />
                <Condition
                  Property="Selector.IsSelected"
                  Value="True" />
              </MultiTrigger.Conditions>
              <Setter
                Property="Background"
                TargetName="border"
                Value="{StaticResource SelectedBackgroundBrush}" />
              <Setter
                Property="Opacity"
                TargetName="border"
                Value="0.9" />
            </MultiTrigger>
            <Trigger
              Property="IsEnabled"
              Value="False">
              <Setter
                Property="Foreground"
                Value="{StaticResource DisabledForegroundBrush}" />
              <Setter
                Property="Background"
                TargetName="border"
                Value="{StaticResource DisabledBackgroundBrush}" />
              <Setter
                Property="Opacity"
                TargetName="grid"
                Value="0.3" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger
        Property="Selector.IsSelected"
        Value="True">
        <Setter
          Property="Foreground">
          <Setter.Value>
            <SolidColorBrush
              Color="{StaticResource BlackColor}" />
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style
    x:Key="NuclearSliderThumb"
    TargetType="{x:Type Thumb}">
    <Setter
      Property="SnapsToDevicePixels"
      Value="true" />
    <Setter
      Property="Height"
      Value="14" />
    <Setter
      Property="Width"
      Value="14" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type Thumb}">
          <ControlTemplate.Resources>
            <Storyboard
              x:Key="HoverOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverShineBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="HoverOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.4000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverShineBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.4000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="PressedOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="PressedBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="PressedOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="PressedBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.4000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid>
            <Border
              x:Name="Background"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="3" />
            <Border
              x:Name="HoverBorder"
              Opacity="0"
              Background="{StaticResource HoverBrush}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="3" />
            <Border
              x:Name="HoverShineBorder"
              Opacity="0"
              Background="{StaticResource HoverShineBrush}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="3" />
            <Border
              x:Name="PressedBorder"
              Opacity="0"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="3"
              Background="{StaticResource PressedBrush}" />
            <Border
              x:Name="ShineBorder"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="3"
              Background="{StaticResource ShineBrush}"
              Opacity="1" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsMouseOver"
              Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOff}"
                  x:Name="HoverOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger
              Property="IsDragging"
              Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource PressedOff}"
                  x:Name="PressedOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource PressedOn}"
                  x:Name="PressedOn_BeginStoryboard" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger
              Property="IsEnabled"
              Value="false">
              <Setter
                Property="Background"
                TargetName="Background"
                Value="{StaticResource DisabledBackgroundBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter
      Property="Background"
      Value="{StaticResource NormalBrush}" />
    <Setter
      Property="BorderBrush"
      Value="{StaticResource NormalBorderBrush}" />
    <Setter
      Property="BorderThickness"
      Value="1,1,1,1" />
  </Style>
  <Style
    TargetType="{x:Type Slider}">
    <Setter
      Property="Background"
      Value="{StaticResource NormalBrush}" />
    <Setter
      Property="BorderBrush"
      Value="{StaticResource NormalBorderBrush}" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type Slider}">
          <Grid
            x:Name="GridRoot">
            <Grid.RowDefinitions>
              <RowDefinition
                Height="Auto" />
              <RowDefinition
                Height="Auto"
                MinHeight="{TemplateBinding MinHeight}" />
              <RowDefinition
                Height="Auto" />
            </Grid.RowDefinitions>
            <TickBar
              Visibility="Collapsed"
              x:Name="TopTick"
              Height="4"
              SnapsToDevicePixels="True"
              Placement="Top"
              Fill="{StaticResource GlyphBrush}" />
            <Border
              Grid.Row="1"
              Margin="0"
              x:Name="Border"
              Height="4"
              CornerRadius="2"
              Background="{StaticResource LightBrush}"
              BorderBrush="{StaticResource NormalBorderBrush}"
              BorderThickness="1,1,1,1" />
            <Track
              Grid.Row="1"
              x:Name="PART_Track">
              <Track.Thumb>
                <Thumb
                  Style="{StaticResource NuclearSliderThumb}"
                  Background="{StaticResource NormalBrush}"
                  Foreground="{x:Null}"
                  Width="20" />
              </Track.Thumb>
              <Track.IncreaseRepeatButton>
                <RepeatButton
                  Style="{StaticResource NuclearScrollRepeatButtonStyle}"
                  Command="Slider.IncreaseLarge" />
              </Track.IncreaseRepeatButton>
              <Track.DecreaseRepeatButton>
                <RepeatButton
                  Style="{StaticResource NuclearScrollRepeatButtonStyle}"
                  Command="Slider.DecreaseLarge" />
              </Track.DecreaseRepeatButton>
            </Track>
            <TickBar
              Visibility="Collapsed"
              Grid.Row="2"
              x:Name="BottomTick"
              Height="4"
              SnapsToDevicePixels="True"
              Placement="Bottom"
              Fill="{TemplateBinding Foreground}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger
              Property="TickPlacement"
              Value="TopLeft">
              <Setter
                Property="Visibility"
                Value="Visible"
                TargetName="TopTick" />
            </Trigger>
            <Trigger
              Property="TickPlacement"
              Value="BottomRight">
              <Setter
                Property="Visibility"
                Value="Visible"
                TargetName="BottomTick" />
            </Trigger>
            <Trigger
              Property="TickPlacement"
              Value="Both">
              <Setter
                Property="Visibility"
                Value="Visible"
                TargetName="TopTick" />
              <Setter
                Property="Visibility"
                Value="Visible"
                TargetName="BottomTick" />
            </Trigger>
            <Trigger
              Property="IsEnabled"
              Value="false">
              <Setter
                Property="Background"
                Value="{StaticResource DisabledBackgroundBrush}"
                TargetName="Border" />
              <Setter
                Property="BorderBrush"
                Value="{StaticResource DisabledBorderBrush}"
                TargetName="Border" />
            </Trigger>
            <Trigger
              Property="Orientation"
              Value="Vertical">
              <Setter
                Property="LayoutTransform"
                TargetName="GridRoot">
                <Setter.Value>
                  <RotateTransform
                    Angle="-90" />
                </Setter.Value>
              </Setter>
              <Setter
                TargetName="PART_Track"
                Property="Orientation"
                Value="Horizontal" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style
    TargetType="{x:Type TreeView}">
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type TreeView}">
          <Grid>
            <Border
              x:Name="Border"
              BorderBrush="{x:Null}"
              BorderThickness="1"
              CornerRadius="3,3,3,3">
              <ScrollViewer
                Focusable="False"
                Padding="4"
                HorizontalScrollBarVisibility="Auto"
                VerticalScrollBarVisibility="Auto"
                CanContentScroll="False"
                Foreground="{StaticResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}"
                Background="{StaticResource ControlBackgroundBrush}">
                <ItemsPresenter />
              </ScrollViewer>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style
    x:Key="NuclearTreeViewItemToggleButton"
    TargetType="{x:Type ToggleButton}">
    <Setter
      Property="Focusable"
      Value="False" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type ToggleButton}">
          <Grid
            Width="20"
            Height="20"
            Background="Transparent">
            <Path
              Visibility="Collapsed"
              HorizontalAlignment="Left"
              Margin="5"
              x:Name="IsExpandedPath"
              VerticalAlignment="Center"
              Fill="{StaticResource NormalBorderBrush}"
              Data="M 0 4 L 8 4 L 4 8 Z" />
            <Path
              HorizontalAlignment="Left"
              Margin="5"
              x:Name="ExpandPath"
              VerticalAlignment="Center"
              Fill="{StaticResource NormalBrush}"
              Data="M 4 0 L 8 4 L 4 8 Z" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsChecked"
              Value="True">
              <Setter
                Property="Visibility"
                Value="Visible"
                TargetName="IsExpandedPath" />
              <Setter
                Property="Visibility"
                Value="Collapsed"
                TargetName="ExpandPath" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style
    TargetType="{x:Type TreeViewItem}">
    <Style.Triggers>
      <Trigger
        Property="IsSelected"
        Value="True">
        <Setter
          Property="Foreground">
          <Setter.Value>
            <SolidColorBrush
              Color="{StaticResource BlackColor}" />
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Setter
      Property="Background"
      Value="Transparent" />
    <Setter
      Property="HorizontalContentAlignment"
      Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter
      Property="VerticalContentAlignment"
      Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter
      Property="Padding"
      Value="5" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type TreeViewItem}">
          <ControlTemplate.Resources>
            <Storyboard
              x:Key="HoverOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="HoverOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="SelectedOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="SelectionBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="SelectedOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="SelectionBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition
                MinWidth="19"
                Width="Auto" />
              <ColumnDefinition
                Width="Auto" />
              <ColumnDefinition
                Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition
                Height="Auto" />
              <RowDefinition />
            </Grid.RowDefinitions>
            <ToggleButton
              x:Name="Expander"
              Style="{StaticResource NuclearTreeViewItemToggleButton}"
              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
              ClickMode="Press"
              Background="{x:Null}"
              BorderBrush="{x:Null}"
              Foreground="{x:Null}" />
            <Border
              Grid.Column="1"
              x:Name="Selection_Border"
              BorderThickness="1,1,1,1"
              CornerRadius="3,3,3,3">
              <Grid
                Width="Auto"
                Height="Auto">
                <Border
                  x:Name="MainBorder"
                  Opacity="0.25"
                  Background="{StaticResource NormalBrush}"
                  CornerRadius="2,2,2,2" />
                <Border
                  x:Name="SelectionBorder"
                  Opacity="0"
                  Background="{StaticResource SelectedBackgroundBrush}"
                  CornerRadius="2,2,2,2" />
                <Border
                  x:Name="HoverBorder"
                  Opacity="0"
                  Background="{StaticResource NormalBrush}"
                  CornerRadius="2,2,2,2" />
                <ContentPresenter
                  x:Name="PART_Header"
                  ContentSource="Header"
                  Height="Auto"
                  Margin="7,3,7,3" />
              </Grid>
            </Border>
            <ItemsPresenter
              Grid.Column="1"
              Grid.ColumnSpan="2"
              Grid.Row="1"
              x:Name="ItemsHost" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsExpanded"
              Value="false">
              <Setter
                Property="Visibility"
                Value="Collapsed"
                TargetName="ItemsHost" />
            </Trigger>
            <Trigger
              Property="HasItems"
              Value="false">
              <Setter
                Property="Visibility"
                Value="Hidden"
                TargetName="Expander" />
            </Trigger>
            <Trigger
              Property="IsSelected"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource SelectedOff}"
                  x:Name="SelectedOn_BeginStoryboard1" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource SelectedOn}"
                  x:Name="SelectedOn_BeginStoryboard" />
              </Trigger.EnterActions>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition
                  Property="IsSelected"
                  Value="true" />
                <Condition
                  Property="IsSelectionActive"
                  Value="false" />
              </MultiTrigger.Conditions>
              <Setter
                Property="Foreground"
                Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}" />
              <Setter
                Property="Background"
                TargetName="Selection_Border"
                Value="{StaticResource SelectedBackgroundBrush}" />
              <Setter
                Property="Opacity"
                TargetName="Selection_Border"
                Value="0.5" />
              <Setter
                Property="BorderBrush"
                TargetName="Selection_Border"
                Value="{StaticResource NormalBorderBrush}" />
            </MultiTrigger>
            <Trigger
              Property="IsEnabled"
              Value="false">
              <Setter
                Property="Foreground"
                Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOff}"
                  x:Name="HoverOff_BeginStoryboard" />
              </MultiTrigger.ExitActions>
              <MultiTrigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOn}" />
              </MultiTrigger.EnterActions>
              <MultiTrigger.Conditions>
                <Condition
                  Property="IsMouseOver"
                  SourceName="Selection_Border"
                  Value="True" />
                <Condition
                  Property="IsSelected"
                  Value="False" />
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition
                  Property="IsSelected"
                  Value="true" />
                <Condition
                  Property="IsMouseOver"
                  Value="true"
                  SourceName="Selection_Border" />
              </MultiTrigger.Conditions>
              <Setter
                Property="Background"
                TargetName="Selection_Border"
                Value="{StaticResource SelectedBackgroundBrush}" />
              <Setter
                Property="Opacity"
                TargetName="Selection_Border"
                Value="0.8" />
              <Setter
                Property="BorderBrush"
                TargetName="Selection_Border"
                Value="{StaticResource NormalBorderBrush}" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style
    x:Key="ButtonFocusVisual">
    <Setter
      Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle
            SnapsToDevicePixels="true"
            Margin="2"
            Stroke="Black"
            StrokeDashArray="1 2"
            StrokeThickness="1" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush
    x:Key="ButtonNormalBackground"
    EndPoint="0,1"
    StartPoint="0,0">
    <GradientStop
      Color="#F3F3F3"
      Offset="0" />
    <GradientStop
      Color="#EBEBEB"
      Offset="0.5" />
    <GradientStop
      Color="#DDDDDD"
      Offset="0.5" />
    <GradientStop
      Color="#CDCDCD"
      Offset="1" />
  </LinearGradientBrush>
  <SolidColorBrush
    x:Key="ButtonNormalBorder"
    Color="#FF707070" />
  <Style
    TargetType="{x:Type ToggleButton}">
    <Setter
      Property="FocusVisualStyle"
      Value="{StaticResource ButtonFocusVisual}" />
    <Setter
      Property="Background"
      Value="{StaticResource ButtonNormalBackground}" />
    <Setter
      Property="BorderBrush"
      Value="{StaticResource ButtonNormalBorder}" />
    <Setter
      Property="BorderThickness"
      Value="1" />
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Setter
      Property="HorizontalContentAlignment"
      Value="Center" />
    <Setter
      Property="VerticalContentAlignment"
      Value="Center" />
    <Setter
      Property="Padding"
      Value="1" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type ToggleButton}">
          <ControlTemplate.Resources>
            <Storyboard
              x:Key="HoverOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="0.5" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverShineBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="HoverOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverShineBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="CheckedOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="CheckedBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="0.5" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="CheckedOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="CheckedBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="PressedOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="Pressed"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="PressedOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="Pressed"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid
            x:Name="grid">
            <Border
              x:Name="Border"
              BorderThickness="{TemplateBinding BorderThickness}"
              Padding="{TemplateBinding Padding}"
              Background="{StaticResource NormalBrush}"
              BorderBrush="{StaticResource NormalBorderBrush}"
              CornerRadius="3,3,3,3" />
            <Border
              x:Name="CheckedBorder"
              BorderThickness="{TemplateBinding BorderThickness}"
              Padding="{TemplateBinding Padding}"
              Background="{StaticResource SelectedBackgroundBrush}"
              BorderBrush="{StaticResource NormalBorderBrush}"
              CornerRadius="3,3,3,3"
              Opacity="0" />
            <Border
              x:Name="HoverBorder"
              BorderThickness="{TemplateBinding BorderThickness}"
              Padding="{TemplateBinding Padding}"
              BorderBrush="{StaticResource NormalBorderBrush}"
              CornerRadius="3,3,3,3"
              Opacity="0"
              Background="{StaticResource HoverBrush}" />
            <Border
              x:Name="HoverShineBorder"
              BorderThickness="{TemplateBinding BorderThickness}"
              Padding="{TemplateBinding Padding}"
              BorderBrush="{StaticResource NormalBorderBrush}"
              CornerRadius="3,3,3,3"
              Opacity="0"
              Background="{StaticResource HoverShineBrush}" />
            <Border
              x:Name="Pressed"
              BorderThickness="{TemplateBinding BorderThickness}"
              Padding="{TemplateBinding Padding}"
              BorderBrush="{StaticResource PressedBorderBrush}"
              CornerRadius="3,3,3,3"
              Opacity="0"
              Background="{StaticResource PressedBrush}" />
            <Rectangle
              Opacity="1"
              Stroke="{x:Null}"
              RadiusX="3"
              RadiusY="3"
              Margin="2,2,2,2"
              VerticalAlignment="Stretch"
              Height="Auto"
              x:Name="Shine">
              <Rectangle.Fill>
                <LinearGradientBrush
                  EndPoint="0.5,0.971"
                  StartPoint="0.5,0.042">
                  <GradientStop
                    Color="#26FFFFFF"
                    Offset="0" />
                  <GradientStop
                    Color="#00FFFFFF"
                    Offset="1" />
                  <GradientStop
                    Color="#26FFFFFF"
                    Offset="0.467" />
                  <GradientStop
                    Color="#00FFFFFF"
                    Offset="0.475" />
                </LinearGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
            <ContentPresenter
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
              RecognizesAccessKey="True"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Margin="4,4,4,4" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsMouseOver"
              Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOff}"
                  x:Name="HoverOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger
              Property="IsPressed"
              Value="True">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource PressedOff}"
                  x:Name="PressedOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource PressedOn}"
                  x:Name="PressedOn_BeginStoryboard" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger
              Property="IsKeyboardFocused"
              Value="true" />
            <Trigger
              Property="IsChecked"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource CheckedOff}"
                  x:Name="CheckedOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource CheckedOn}"
                  x:Name="CheckedOn_BeginStoryboard" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger
              Property="IsEnabled"
              Value="false">
              <Setter
                Property="Foreground"
                Value="#ADADAD" />
              <Setter
                Property="Background"
                TargetName="Border"
                Value="{StaticResource DisabledBackgroundBrush}" />
              <Setter
                Property="BorderBrush"
                TargetName="Border"
                Value="{StaticResource DisabledBorderBrush}" />
              <Setter
                Property="Opacity"
                TargetName="grid"
                Value="0.5" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger
        Property="IsChecked"
        Value="True">
        <Setter
          Property="Foreground">
          <Setter.Value>
            <SolidColorBrush
              Color="{StaticResource BlackColor}" />
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <BorderGapMaskConverter
    x:Key="BorderGapMaskConverter" />
  <Style
    TargetType="{x:Type GroupBox}">
    <Setter
      Property="BorderBrush"
      Value="#D5DFE5" />
    <Setter
      Property="BorderThickness"
      Value="1" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type GroupBox}">
          <Grid
            SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
              <ColumnDefinition
                Width="6" />
              <ColumnDefinition
                Width="Auto" />
              <ColumnDefinition
                Width="*" />
              <ColumnDefinition
                Width="6" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition
                Height="Auto" />
              <RowDefinition
                Height="Auto" />
              <RowDefinition
                Height="*" />
              <RowDefinition
                Height="6" />
            </Grid.RowDefinitions>
            <Border
              Grid.ColumnSpan="4"
              Grid.RowSpan="4"
              Background="{StaticResource LightBrush}"
              BorderThickness="1" />
            <Border
              Grid.ColumnSpan="4"
              Grid.Row="1"
              Grid.RowSpan="3"
              BorderThickness="1"
              BorderBrush="{StaticResource NormalBorderBrush}" />
            <Border
              Grid.Column="0"
              Grid.ColumnSpan="4"
              Grid.Row="1"
              Grid.RowSpan="3"
              Background="{TemplateBinding Background}"
              BorderBrush="Transparent"
              BorderThickness="{TemplateBinding BorderThickness}" />
            <Border
              Grid.ColumnSpan="4"
              Grid.RowSpan="2"
              Background="{StaticResource NormalBrush}"
              BorderThickness="1,1,1,0"
              x:Name="Main"
              BorderBrush="{StaticResource NormalBorderBrush}" />
            <Rectangle
              Opacity="1"
              Stroke="{x:Null}"
              VerticalAlignment="Stretch"
              Height="Auto"
              x:Name="Shine"
              Grid.ColumnSpan="4"
              Grid.RowSpan="2"
              Margin="1">
              <Rectangle.Fill>
                <LinearGradientBrush
                  EndPoint="0.5,0.971"
                  StartPoint="0.5,0.042">
                  <GradientStop
                    Color="#26FFFFFF"
                    Offset="0" />
                  <GradientStop
                    Color="#00FFFFFF"
                    Offset="1" />
                  <GradientStop
                    Color="#26FFFFFF"
                    Offset="0.467" />
                  <GradientStop
                    Color="#00FFFFFF"
                    Offset="0.475" />
                </LinearGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
            <Border
              x:Name="Header"
              Grid.Column="1"
              Grid.Row="0"
              Grid.RowSpan="2"
              Padding="3,1,3,0">
              <ContentPresenter
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                ContentSource="Header"
                RecognizesAccessKey="True"
                Margin="0,4,0,4" />
            </Border>
            <ContentPresenter
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
              Margin="{TemplateBinding Padding}"
              Grid.Column="1"
              Grid.ColumnSpan="2"
              Grid.Row="2" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter
      Property="Foreground">
      <Setter.Value>
        <SolidColorBrush
          Color="{StaticResource WhiteColor}" />
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush
    x:Key="ListBorder"
    Color="#828790" />
  <Style
    x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}"
    TargetType="{x:Type ScrollViewer}">
    <Setter
      Property="OverridesDefaultStyle"
      Value="True" />
    <Setter
      Property="Background"
      Value="Transparent" />
    <Setter
      Property="Focusable"
      Value="false" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type ScrollViewer}">
          <Grid
            SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
              <ColumnDefinition
                Width="*" />
              <ColumnDefinition
                Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition
                Height="*" />
              <RowDefinition
                Height="Auto" />
            </Grid.RowDefinitions>
            <Grid
              Grid.Row="0"
              Grid.Column="0"
              Background="{TemplateBinding Background}">
              <ScrollContentPresenter />
            </Grid>
            <ScrollBar
              Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
              Cursor="Arrow"
              x:Name="PART_HorizontalScrollBar"
              Grid.Row="1"
              Grid.Column="0"
              Orientation="Horizontal"
              ViewportSize="{TemplateBinding ViewportWidth}"
              Maximum="{TemplateBinding ScrollableWidth}"
              Minimum="0.0"
              Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            <ScrollBar
              Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
              Cursor="Arrow"
              x:Name="PART_VerticalScrollBar"
              Grid.Row="0"
              Grid.Column="1"
              Orientation="Vertical"
              ViewportSize="{TemplateBinding ViewportHeight}"
              Maximum="{TemplateBinding ScrollableHeight}"
              Minimum="0.0"
              Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style
    TargetType="{x:Type ListView}">
    <Setter
      Property="SnapsToDevicePixels"
      Value="True" />
    <Setter
      Property="Background"
      Value="{StaticResource ControlBackgroundBrush}" />
    <Setter
      Property="BorderBrush"
      Value="{StaticResource NormalBorderBrush}" />
    <Setter
      Property="BorderThickness"
      Value="1" />
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Setter
      Property="ScrollViewer.HorizontalScrollBarVisibility"
      Value="Auto" />
    <Setter
      Property="ScrollViewer.VerticalScrollBarVisibility"
      Value="Auto" />
    <Setter
      Property="ScrollViewer.CanContentScroll"
      Value="true" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type ListView}">
          <Border
            x:Name="Bd"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="0,0,0,0"
            BorderBrush="{TemplateBinding BorderBrush}"
            Background="{TemplateBinding Background}">
            <ScrollViewer
              Padding="{TemplateBinding Padding}">
              <ItemsPresenter
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style
    x:Key="ListViewItemFocusVisual">
    <Setter
      Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle
            Stroke="#8E6EA6F5"
            StrokeThickness="1"
            RadiusX="2"
            RadiusY="2" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style
    TargetType="{x:Type ListViewItem}">
    <Setter
      Property="SnapsToDevicePixels"
      Value="True" />
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Setter
      Property="FocusVisualStyle"
      Value="{StaticResource ListViewItemFocusVisual}" />
    <Setter
      Property="Background"
      Value="Transparent" />
    <Setter
      Property="BorderBrush"
      Value="Transparent" />
    <Setter
      Property="BorderThickness"
      Value="1" />
    <Setter
      Property="Margin"
      Value="0,0,0,1" />
    <Setter
      Property="Padding"
      Value="5,2,5,2" />
    <Setter
      Property="VerticalContentAlignment"
      Value="Center" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type ListViewItem}">
          <ControlTemplate.Resources>
            <Storyboard
              x:Key="HoverOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="HoverOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.4000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="SelectedOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="SelectedRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="SelectedOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="SelectedRectangle"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.4000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="FocussedOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="FocusVisualElement"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="FocussedOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="FocusVisualElement"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Border
            SnapsToDevicePixels="true"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="Transparent"
            CornerRadius="2"
            x:Name="border">
            <Grid>
              <Rectangle
                x:Name="Background"
                IsHitTestVisible="False"
                Opacity="0.25"
                Fill="{StaticResource NormalBrush}"
                RadiusX="1"
                RadiusY="1" />
              <Rectangle
                x:Name="HoverRectangle"
                IsHitTestVisible="False"
                Opacity="0"
                Fill="{StaticResource NormalBrush}"
                RadiusX="1"
                RadiusY="1" />
              <Rectangle
                x:Name="SelectedRectangle"
                IsHitTestVisible="False"
                Opacity="0"
                Fill="{StaticResource SelectedBackgroundBrush}"
                RadiusX="1"
                RadiusY="1" />
              <ContentPresenter
                Content="{TemplateBinding Content}"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                Margin="5,2" />
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsSelected"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource SelectedOff}"
                  x:Name="SelectedOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource SelectedOn}"
                  x:Name="SelectedOn_BeginStoryboard" />
              </Trigger.EnterActions>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOff}"
                  x:Name="HoverOff_BeginStoryboard" />
              </MultiTrigger.ExitActions>
              <MultiTrigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOn}" />
              </MultiTrigger.EnterActions>
              <MultiTrigger.Conditions>
                <Condition
                  Property="IsMouseOver"
                  Value="True" />
                <Condition
                  Property="Selector.IsSelected"
                  Value="False" />
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition
                  Property="Selector.IsSelected"
                  Value="True" />
                <Condition
                  Property="IsMouseOver"
                  Value="True" />
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger
              Property="IsEnabled"
              Value="false">
              <Setter
                Property="Foreground"
                Value="{StaticResource DisabledForegroundBrush}" />
              <Setter
                Property="Fill"
                TargetName="Background"
                Value="{StaticResource DisabledBackgroundBrush}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition
                  Property="IsSelected"
                  Value="true" />
                <Condition
                  Property="Selector.IsSelectionActive"
                  Value="false" />
              </MultiTrigger.Conditions>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger
        Property="Selector.IsSelected"
        Value="True">
        <Setter
          Property="Foreground">
          <Setter.Value>
            <SolidColorBrush
              Color="{StaticResource BlackColor}" />
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style
    x:Key="GridViewColumnHeaderGripper"
    TargetType="{x:Type Thumb}">
    <Setter
      Property="Canvas.Right"
      Value="-8.5" />
    <Setter
      Property="Width"
      Value="18" />
    <Setter
      Property="Height"
      Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}}" />
    <Setter
      Property="Padding"
      Value="0,3,0,4" />
    <Setter
      Property="Background"
      Value="{StaticResource LightBrush}" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type Thumb}">
          <Border
            Padding="{TemplateBinding Padding}">
            <Rectangle
              HorizontalAlignment="Center"
              Width="0.5">
              <Rectangle.Fill>
                <SolidColorBrush
                  Color="{StaticResource WhiteColor}" />
              </Rectangle.Fill>
            </Rectangle>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style
    x:Key="{x:Type GridViewColumnHeader}"
    TargetType="{x:Type GridViewColumnHeader}">
    <Setter
      Property="HorizontalContentAlignment"
      Value="Center" />
    <Setter
      Property="VerticalContentAlignment"
      Value="Center" />
    <Setter
      Property="Background"
      Value="{StaticResource LightBrush}" />
    <Setter
      Property="Padding"
      Value="2,0,2,0" />
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type GridViewColumnHeader}">
          <ControlTemplate.Resources>
            <Storyboard
              x:Key="HoverOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverShineBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="HoverOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="HoverShineBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="PressedOn">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="PressedBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.1000000"
                  Value="1" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard
              x:Key="PressedOff">
              <DoubleAnimationUsingKeyFrames
                BeginTime="00:00:00"
                Storyboard.TargetName="PressedBorder"
                Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame
                  KeyTime="00:00:00.3000000"
                  Value="0" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid
            Margin="0,1,0,1">
            <Grid>
              <Border
                x:Name="Main"
                BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}"
                Background="{StaticResource NormalBrush}"
                BorderBrush="{StaticResource NormalBorderBrush}"
                CornerRadius="0,0,0,0" />
              <Rectangle
                Opacity="1"
                Stroke="{x:Null}"
                RadiusX="0"
                RadiusY="0"
                VerticalAlignment="Stretch"
                Height="Auto"
                x:Name="Shine"
                Fill="{StaticResource ShineBrush}" />
              <Border
                x:Name="HoverBorder"
                BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}"
                Background="{StaticResource HoverBrush}"
                BorderBrush="{StaticResource NormalBorderBrush}"
                CornerRadius="0,0,0,0"
                Opacity="0" />
              <Border
                x:Name="HoverShineBorder"
                BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}"
                Background="{StaticResource HoverShineBrush}"
                BorderBrush="{StaticResource NormalBorderBrush}"
                CornerRadius="0,0,0,0"
                Opacity="0" />
              <Border
                x:Name="PressedBorder"
                BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}"
                Background="{StaticResource PressedBrush}"
                BorderBrush="{StaticResource PressedBorderBrush}"
                CornerRadius="0,0,0,0"
                Opacity="0" />
              <Border
                BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}">
                <Border.BorderBrush>
                  <SolidColorBrush
                    Color="{StaticResource WhiteColor}" />
                </Border.BorderBrush>
                <ContentPresenter
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  RecognizesAccessKey="True"
                  Margin="2,2,2,2" />
              </Border>
            </Grid>
            <Canvas>
              <Thumb
                x:Name="PART_HeaderGripper"
                Style="{StaticResource GridViewColumnHeaderGripper}"
                Margin="0,0,7,0"
                Width="Auto"
                HorizontalAlignment="Stretch" />
            </Canvas>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsMouseOver"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOff}"
                  x:Name="HoverOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource HoverOn}" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger
              Property="IsPressed"
              Value="true">
              <Trigger.ExitActions>
                <BeginStoryboard
                  Storyboard="{StaticResource PressedOff}"
                  x:Name="PressedOff_BeginStoryboard" />
              </Trigger.ExitActions>
              <Trigger.EnterActions>
                <BeginStoryboard
                  Storyboard="{StaticResource PressedOn}"
                  x:Name="PressedOn_BeginStoryboard" />
              </Trigger.EnterActions>
            </Trigger>
            <Trigger
              Property="Height"
              Value="Auto">
              <Setter
                Property="MinHeight"
                Value="20" />
            </Trigger>
            <Trigger
              Property="IsEnabled"
              Value="false">
              <Setter
                Property="Foreground"
                Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
            <Trigger
              Property="Role"
              Value="Padding">
              <Setter
                TargetName="PART_HeaderGripper"
                Property="Visibility"
                Value="Collapsed" />
            </Trigger>
            <Trigger
              Property="Role"
              Value="Floating">
              <Setter
                TargetName="PART_HeaderGripper"
                Property="Visibility"
                Value="Collapsed" />
              <Setter
                Property="Background"
                Value="Yellow" />
              <Setter
                Property="Foreground"
                Value="{StaticResource HoverBrush}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style
    x:Key="{x:Static ToolBar.ButtonStyleKey}"
    TargetType="{x:Type Button}"
    BasedOn="{x:Null}">
    <Setter
      Property="Background"
      Value="{StaticResource NormalBrush}" />
    <Setter
      Property="BorderBrush"
      Value="{StaticResource NormalBorderBrush}" />
    <Setter
      Property="Template"
      Value="{StaticResource ButtonTemplate}" />
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Setter
      Property="FontSize"
      Value="10" />
    <Setter
      Property="MinHeight"
      Value="18" />
    <Setter
      Property="MinWidth"
      Value="50" />
  </Style>
  <Style
    x:Key="{x:Static ToolBar.CheckBoxStyleKey}"
    TargetType="{x:Type CheckBox}">
    <Setter
      Property="FontSize"
      Value="10" />
    <Setter
      Property="SnapsToDevicePixels"
      Value="true" />
    <Setter
      Property="FocusVisualStyle"
      Value="{StaticResource CheckBoxFocusVisual}" />
    <Setter
      Property="Background"
      Value="{StaticResource NormalBrush}" />
    <Setter
      Property="BorderBrush"
      Value="{StaticResource NormalBorderBrush}" />
    <Setter
      Property="Template"
      Value="{StaticResource CheckBoxTemplate}" />
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
  </Style>
  <Style
    x:Key="{x:Static ToolBar.RadioButtonStyleKey}"
    TargetType="{x:Type RadioButton}">
    <Setter
      Property="FontSize"
      Value="10" />
    <Setter
      Property="SnapsToDevicePixels"
      Value="true" />
    <Setter
      Property="FocusVisualStyle"
      Value="{StaticResource RadioButtonFocusVisual}" />
    <Setter
      Property="Background"
      Value="{StaticResource NormalBrush}" />
    <Setter
      Property="BorderBrush"
      Value="{StaticResource NormalBorderBrush}" />
    <Setter
      Property="Template"
      Value="{StaticResource RadioButtonTemplate}" />
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Style.Triggers>
      <Trigger
        Property="IsEnabled"
        Value="False">
        <Setter
          Property="Foreground">
          <Setter.Value>
            <SolidColorBrush
              Color="{StaticResource MainColor}" />
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style
    x:Key="{x:Static ToolBar.ComboBoxStyleKey}"
    TargetType="{x:Type ComboBox}">
    <Setter
      Property="FontSize"
      Value="10" />
    <Setter
      Property="SnapsToDevicePixels"
      Value="true" />
    <Setter
      Property="Template"
      Value="{StaticResource ComboBoxTemplate}" />
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
  </Style>
  <Style
    x:Key="{x:Static ToolBar.TextBoxStyleKey}"
    TargetType="{x:Type TextBox}">
    <Setter
      Property="FontSize"
      Value="10" />
    <Setter
      Property="KeyboardNavigation.TabNavigation"
      Value="None" />
    <Setter
      Property="FocusVisualStyle"
      Value="{x:Null}" />
    <Setter
      Property="AllowDrop"
      Value="true" />
    <Setter
      Property="Template"
      Value="{StaticResource TextBoxTemplate}" />
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
    <Setter
      Property="Background"
      Value="{StaticResource ControlBackgroundBrush}" />
    <Setter
      Property="BorderBrush"
      Value="#FF000000" />
  </Style>
  <LinearGradientBrush
    x:Key="ToolBarHorizontalBackground"
    EndPoint="0,1"
    StartPoint="0,0">
    <GradientStop
      Color="#FFFFFF"
      Offset="0" />
    <GradientStop
      Color="#FFFBFF"
      Offset="0.5" />
    <GradientStop
      Color="#F7F7F7"
      Offset="1" />
  </LinearGradientBrush>
  <LinearGradientBrush
    x:Key="ToolBarToggleButtonHorizontalBackground"
    EndPoint="0,1"
    StartPoint="0,0">
    <GradientStop
      Color="#ECECEC"
      Offset="0" />
    <GradientStop
      Color="#DDDDDD"
      Offset="0.5" />
    <GradientStop
      Color="#A0A0A0"
      Offset="1" />
  </LinearGradientBrush>
  <SolidColorBrush
    x:Key="ToolBarButtonHover"
    Color="{StaticResource MainColor}" />
  <SolidColorBrush
    x:Key="ToolBarGripper"
    Color="#C6C3C6" />
  <Style
    x:Key="ToolBarHorizontalOverflowButtonStyle"
    TargetType="{x:Type ToggleButton}">
    <Setter
      Property="Background"
      Value="{StaticResource ToolBarToggleButtonHorizontalBackground}" />
    <Setter
      Property="MinHeight"
      Value="0" />
    <Setter
      Property="MinWidth"
      Value="0" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type ToggleButton}">
          <Border
            SnapsToDevicePixels="true"
            x:Name="Bd"
            CornerRadius="0,0,0,0"
            Background="{StaticResource LightBrush}">
            <Canvas
              SnapsToDevicePixels="true"
              HorizontalAlignment="Right"
              Margin="7,2,2,2"
              VerticalAlignment="Bottom"
              Width="6"
              Height="7">
              <Path
                Stroke="White"
                Data="M 1 1.5 L 6 1.5" />
              <Path
                Stroke="{TemplateBinding Foreground}"
                Data="M 0 0.5 L 5 0.5" />
              <Path
                Fill="White"
                Data="M 0.5 4 L 6.5 4 L 3.5 7 Z" />
              <Path
                Fill="{TemplateBinding Foreground}"
                Data="M -0.5 3 L 5.5 3 L 2.5 6 Z" />
            </Canvas>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsMouseOver"
              Value="true">
              <Setter
                Property="Background"
                TargetName="Bd"
                Value="{StaticResource HoverBrush}" />
            </Trigger>
            <Trigger
              Property="IsKeyboardFocused"
              Value="true">
              <Setter
                Property="Background"
                TargetName="Bd"
                Value="{StaticResource ToolBarButtonHover}" />
            </Trigger>
            <Trigger
              Property="IsEnabled"
              Value="false">
              <Setter
                Property="Foreground"
                Value="{StaticResource ToolBarGripper}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush
    x:Key="ToolBarSubMenuBackground"
    Color="#FFFDFDFD" />
  <SolidColorBrush
    x:Key="ToolBarMenuBorder"
    Color="#FFFFFFFF" />
  <Style
    x:Key="ToolBarThumbStyle"
    TargetType="{x:Type Thumb}">
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type Thumb}">
          <Border
            SnapsToDevicePixels="True"
            Background="Transparent"
            Padding="{TemplateBinding Padding}"
            CornerRadius="0,0,0,0">
            <Rectangle>
              <Rectangle.Fill>
                <DrawingBrush
                  TileMode="Tile"
                  Viewbox="0,0,4,4"
                  ViewboxUnits="Absolute"
                  Viewport="0,0,4,4"
                  ViewportUnits="Absolute">
                  <DrawingBrush.Drawing>
                    <DrawingGroup>
                      <GeometryDrawing
                        Brush="White"
                        Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z" />
                      <GeometryDrawing
                        Brush="{StaticResource ToolBarGripper}"
                        Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z" />
                    </DrawingGroup>
                  </DrawingBrush.Drawing>
                </DrawingBrush>
              </Rectangle.Fill>
            </Rectangle>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsMouseOver"
              Value="true">
              <Setter
                Property="Cursor"
                Value="SizeAll" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush
    x:Key="ToolBarToggleButtonVerticalBackground"
    EndPoint="1,0"
    StartPoint="0,0">
    <GradientStop
      Color="#ECECEC"
      Offset="0" />
    <GradientStop
      Color="#DDDDDD"
      Offset="0.5" />
    <GradientStop
      Color="#A0A0A0"
      Offset="1" />
  </LinearGradientBrush>
  <Style
    x:Key="ToolBarVerticalOverflowButtonStyle"
    TargetType="{x:Type ToggleButton}">
    <Setter
      Property="Background"
      Value="{StaticResource ToolBarToggleButtonVerticalBackground}" />
    <Setter
      Property="MinHeight"
      Value="0" />
    <Setter
      Property="MinWidth"
      Value="0" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type ToggleButton}">
          <Border
            SnapsToDevicePixels="true"
            x:Name="Bd"
            Background="{TemplateBinding Background}"
            CornerRadius="0,0,3,3">
            <Canvas
              SnapsToDevicePixels="true"
              HorizontalAlignment="Right"
              Margin="2,7,2,2"
              VerticalAlignment="Bottom"
              Width="7"
              Height="6">
              <Path
                Stroke="White"
                Data="M 1.5 1 L 1.5 6" />
              <Path
                Stroke="{TemplateBinding Foreground}"
                Data="M 0.5 0 L 0.5 5" />
              <Path
                Fill="White"
                Data="M 3.5 0.5 L 7 3.5 L 4 6.5 Z" />
              <Path
                Fill="{TemplateBinding Foreground}"
                Data="M 3 -0.5 L 6 2.5 L 3 5.5 Z" />
            </Canvas>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsMouseOver"
              Value="true">
              <Setter
                Property="Background"
                TargetName="Bd"
                Value="{StaticResource ToolBarButtonHover}" />
            </Trigger>
            <Trigger
              Property="IsKeyboardFocused"
              Value="true">
              <Setter
                Property="Background"
                TargetName="Bd"
                Value="{StaticResource ToolBarButtonHover}" />
            </Trigger>
            <Trigger
              Property="IsEnabled"
              Value="false">
              <Setter
                Property="Foreground"
                Value="{StaticResource ToolBarGripper}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush
    x:Key="ToolBarVerticalBackground"
    EndPoint="1,0"
    StartPoint="0,0">
    <GradientStop
      Color="#FFFFFF"
      Offset="0" />
    <GradientStop
      Color="#FFFBFF"
      Offset="0.5" />
    <GradientStop
      Color="#F7F7F7"
      Offset="1" />
  </LinearGradientBrush>
  <Style
    TargetType="{x:Type ToolBar}">
    <Setter
      Property="Background"
      Value="{StaticResource ToolBarHorizontalBackground}" />
    <Setter
      Property="Template">
      <Setter.Value>
        <ControlTemplate
          TargetType="{x:Type ToolBar}">
          <Grid
            SnapsToDevicePixels="true"
            Margin="3,1,1,1"
            x:Name="Grid">
            <Grid
              HorizontalAlignment="Right"
              x:Name="OverflowGrid">
              <ToggleButton
                IsEnabled="{TemplateBinding HasOverflowItems}"
                FocusVisualStyle="{x:Null}"
                x:Name="OverflowButton"
                Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}"
                ClickMode="Press"
                IsChecked="{Binding Path=IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
              <Popup
                Focusable="false"
                AllowsTransparency="true"
                IsOpen="{Binding Path=IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}"
                Placement="Bottom"
                PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                StaysOpen="False"
                x:Name="OverflowPopup">
                <Border
                  x:Name="Shdw">
                  <Border
                    BorderThickness="1,1,1,1"
                    Background="{StaticResource LightBrush}"
                    BorderBrush="{StaticResource LightBrush}">
                    <ToolBarOverflowPanel
                      Focusable="true"
                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                      FocusVisualStyle="{x:Null}"
                      Margin="2"
                      x:Name="PART_ToolBarOverflowPanel"
                      WrapWidth="200"
                      KeyboardNavigation.DirectionalNavigation="Cycle"
                      KeyboardNavigation.TabNavigation="Cycle" />
                  </Border>
                </Border>
              </Popup>
            </Grid>
            <Border
              Margin="0,0,11,0"
              x:Name="MainPanelBorder"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="0,0,0,0"
              Padding="{TemplateBinding Padding}"
              Background="{StaticResource NormalBorderBrush}">
              <Grid>
                <DockPanel
                  KeyboardNavigation.TabIndex="1"
                  KeyboardNavigation.TabNavigation="Local">
                  <Thumb
                    Padding="6,5,1,6"
                    Margin="-3,-1,0,0"
                    x:Name="ToolBarThumb"
                    Style="{StaticResource ToolBarThumbStyle}"
                    Width="10" />
                  <ContentPresenter
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    HorizontalAlignment="Center"
                    Margin="4,0,4,0"
                    x:Name="ToolBarHeader"
                    VerticalAlignment="Center"
                    ContentSource="Header" />
                  <ToolBarPanel
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    Margin="0,1,2,2"
                    x:Name="PART_ToolBarPanel"
                    IsItemsHost="true"
                    Background="{StaticResource NormalBrush}" />
                </DockPanel>
                <Rectangle
                  IsHitTestVisible="False"
                  Opacity="0.15"
                  VerticalAlignment="Top"
                  Height="13.995"
                  Grid.ColumnSpan="1"
                  Margin="0,0,2,0">
                  <Rectangle.Fill>
                    <SolidColorBrush
                      Color="{StaticResource WhiteColor}" />
                  </Rectangle.Fill>
                </Rectangle>
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger
              Property="IsOverflowOpen"
              Value="true">
              <Setter
                Property="IsEnabled"
                TargetName="ToolBarThumb"
                Value="false" />
            </Trigger>
            <Trigger
              Property="Header"
              Value="{x:Null}">
              <Setter
                Property="Visibility"
                TargetName="ToolBarHeader"
                Value="Collapsed" />
            </Trigger>
            <Trigger
              Property="ToolBarTray.IsLocked"
              Value="true">
              <Setter
                Property="Visibility"
                TargetName="ToolBarThumb"
                Value="Collapsed" />
            </Trigger>
            <Trigger
              Property="HasDropShadow"
              SourceName="OverflowPopup"
              Value="true">
              <Setter
                Property="Margin"
                TargetName="Shdw"
                Value="0,0,5,5" />
              <Setter
                Property="SnapsToDevicePixels"
                TargetName="Shdw"
                Value="true" />
              <Setter
                Property="Background"
                TargetName="Shdw"
                Value="#71000000" />
            </Trigger>
            <Trigger
              Property="Orientation"
              Value="Vertical">
              <Setter
                Property="Margin"
                TargetName="Grid"
                Value="1,3,1,1" />
              <Setter
                Property="Style"
                TargetName="OverflowButton"
                Value="{StaticResource ToolBarVerticalOverflowButtonStyle}" />
              <Setter
                Property="Height"
                TargetName="ToolBarThumb"
                Value="10" />
              <Setter
                Property="Width"
                TargetName="ToolBarThumb"
                Value="Auto" />
              <Setter
                Property="Margin"
                TargetName="ToolBarThumb"
                Value="-1,-3,0,0" />
              <Setter
                Property="Padding"
                TargetName="ToolBarThumb"
                Value="5,6,6,1" />
              <Setter
                Property="Margin"
                TargetName="ToolBarHeader"
                Value="0,0,0,4" />
              <Setter
                Property="Margin"
                TargetName="PART_ToolBarPanel"
                Value="1,0,2,2" />
              <Setter
                Property="DockPanel.Dock"
                TargetName="ToolBarThumb"
                Value="Top" />
              <Setter
                Property="DockPanel.Dock"
                TargetName="ToolBarHeader"
                Value="Top" />
              <Setter
                Property="HorizontalAlignment"
                TargetName="OverflowGrid"
                Value="Stretch" />
              <Setter
                Property="VerticalAlignment"
                TargetName="OverflowGrid"
                Value="Bottom" />
              <Setter
                Property="Placement"
                TargetName="OverflowPopup"
                Value="Right" />
              <Setter
                Property="Margin"
                TargetName="MainPanelBorder"
                Value="0,0,0,11" />
              <Setter
                Property="Background"
                Value="{StaticResource ToolBarVerticalBackground}" />
            </Trigger>
            <Trigger
              Property="IsEnabled"
              Value="false">
              <Setter
                Property="Foreground"
                Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter
      Property="Foreground"
      Value="{StaticResource TextBrush}" />
  </Style>
</ResourceDictionary>